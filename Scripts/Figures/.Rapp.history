all.results_interest<-subset(print.site, sp1_name%in%sp.of.interest | sp2_name%in%sp.of.interest)#
#
sig_pos_interest<-subset(all.results_interest, p_gt<0.05) #
sig_neg_interest<-subset(all.results_interest, p_lt<0.05) #
#
all.results_tel<-subset(print.site, sp1_name%in%all.teleost | sp2_name%in%all.teleost)#
#
sig_pos_tel<-subset(all.results_tel, p_gt<0.05) #
sig_neg_tel<-subset(all.results_tel, p_lt<0.05) #
all.results_ceph<-subset(print.site, sp1_name%in%all.ceph | sp2_name%in%all.ceph)#
#
sig_pos_ceph<-subset(all.results_ceph, p_gt<0.05) #
sig_neg_ceph<-subset(all.results_ceph, p_lt<0.05) #
all.results_crust<-subset(print.site, sp1_name%in%all.crust | sp2_name%in%all.crust)#
#
sig_pos_crust<-subset(all.results_crust, p_gt<0.05) #
sig_neg_crust<-subset(all.results_crust, p_lt<0.05)
#add means for all teleosts, all crustaceans, all cephalopods to Figure 3b:#
pos_tel<-mean(sig_pos_tel$effects)#
neg_tel<-mean(sig_neg_tel$effects)#
sd_pos_tel<-sd(sig_pos_tel$effects)#
sd_neg_tel<-sd(sig_neg_tel$effects)#
pos_crust<-mean(sig_pos_crust$effects)#
neg_crust<-mean(sig_neg_crust$effects)#
sd_pos_crust<-sd(sig_pos_crust$effects)#
sd_neg_crust<-sd(sig_neg_crust$effects)#
#
pos_ceph<-mean(sig_pos_ceph$effects)#
neg_ceph<-mean(sig_neg_ceph$effects)#
sd_pos_ceph<-sd(sig_pos_ceph$effects)#
sd_neg_ceph<-sd(sig_neg_ceph$effects)#
#
#calculate sd for error bars:#
error_interest_pos<-aggregate(effects~species, ForPlot_effects_pos_interest, sd)#
error_interest_pos<-c(error_interest_pos$effects, rep(NA,2), sd_pos_tel, sd_pos_crust, sd_pos_ceph)#
error_interest_neg<-aggregate(effects~species, ForPlot_effects_neg_interest, sd)#
error_interest_neg<-c(error_interest_neg$effects, rep(NA,8), sd_neg_tel, sd_neg_crust, sd_neg_ceph)#
error_interest<-c(error_interest_pos, error_interest_neg)#
#
ForBarPlot_interest1<-data.frame(Species=c(as.character(pos_effect_interest$species),#
  "Teleosts", "Crustaceans", "Cephalopods",#
  as.character(neg_effect_interest$species), "Teleosts", "Crustaceans", "Cephalopods"), #
  Effect=c(pos_effect_interest$effects, pos_tel, pos_crust, pos_ceph,#
    neg_effect_interest$effects, neg_tel, neg_crust, neg_ceph), error_plot=error_interest)#
#
ForBarPlot_interest<-subset(ForBarPlot_interest1, !Species%in%c("Geelbek", "Shad", #
  "Galjoen", "Yellowbelly rock cod")) #remove species seen only once#
ForBarPlot_interest$Species<-factor(ForBarPlot_interest$Species, levels=level_order_interest)
############################
########axis labels#########
############################
shark_order_names_fig3<-c("Dark catshark", "Leopard catshark", "Pyjama catshark", "Puffadder catshark",#
  "Broadnose sevengill shark", "Biscuit skate", "Short-tail stingray", #
 "Tiger catshark",  "Soupfin shark", "Smooth-hound shark","Spearnose skate",#
  "Spotted-gully shark", "St. Joseph shark", "Eagle ray", "Lesser guitarfish")#
#
tel_names<-c("West coast rock lobster", "Red roman", "White stumpnose",#
  "Red stumpnose","Red steenbras", "Blacktail", "Janbruin", #
  "Slender baardman", "Silver kob", "Zebra", "Teleosts", "Crustaceans", "Cephalopods")#
#
part_b_order<-c("Chondrichthyans", "Catsharks", "Large sharks", "Batoids")#
##########
#Ensure labels will come out in right order:#
#
ForPartB$Group<-factor(ForPartB$Group, levels=part_b_order)#
ForPartB_interest$Group<-factor(ForPartB_interest$Group, levels=part_b_order)#
#
ForPartB$Direction<-factor(ForPartB$Direction, levels=c("Positive", "Negative"))#
ForPartB_interest$Direction<-factor(ForPartB_interest$Direction, levels=c("Positive", "Negative"))
#################################
#####code for plots:#############
#################################
g1<-ggplot(ForBarPlot, aes(x = Species, y = Effect)) +#
  geom_bar(#
    stat = "identity", position = position_stack(),#
    color = "white", fill = c(rep("grey80",11), rep("grey30",15))#
  ) + ylab("") + xlab("Species") +#
  theme(panel.background=element_rect(fill="white", colour="white")) +#
  theme(axis.line = element_line(colour = 'black', size = 1)) +#
  theme(axis.title.x = element_text(colour = 'black', angle = 0, size =  16, hjust = 0.5, vjust = 0.2)) +#
  theme(axis.title.y = element_text(colour = 'black', angle = 90, size = 16, hjust = 0.5, vjust = 1)) +#
  theme(axis.text=element_text(colour="black", size=14))  +#
  theme(axis.text.x = element_text(angle = 35, vjust=0.8, hjust=1)) +#
  theme(axis.text.y = element_text(margin=margin(t = 0, r = 20, b = 0, l = 0))) +#
  scale_x_discrete(labels=shark_order_names_fig3, expand = c(0.07, 0)) +#
  theme(axis.ticks.length=unit(-0.5, "cm")) +#
  geom_errorbar(aes(ymin=c(Effect-error_plot), ymax=c(Effect+error_plot)), width=.2) + #
   ggtitle("(a)") + #
  theme(plot.title = element_text(size = 16))+#
   theme(plot.margin=unit(c(0.5,1.1,1.1,1.1),"cm"))#
#
   barwidth<-0.35#
#
  g2<-ggplot() +#
  geom_bar(data=ForPartB, mapping=aes(x = as.numeric(Group), y = Effect, #
    fill = Direction), #
    stat = "identity", position = position_stack(), width=barwidth) + #
  geom_bar(data=ForPartB_interest, mapping=aes(x = as.numeric(Group)+barwidth+0.01, y = Effect, #
    fill = Direction), col="black", size=2,#
    stat = "identity", position = position_stack(), width=barwidth) +#
  scale_fill_manual(values = c("Positive" = "grey30", "Negative" = "grey80"))+#
  ylab("Co-occurrence strength") + xlab("Group") +#
  theme(panel.background=element_rect(fill="white", colour="white")) +#
  theme(axis.line = element_line(colour = 'black', size = 1)) +#
  theme(axis.title.x = element_text(colour = 'black', angle = 0, size = 16, hjust = 0.5, vjust = -4)) +#
  theme(axis.title.y = element_text(colour = 'black', angle = 90, size = 16, hjust = 0.5, vjust = 1)) +#
  theme(axis.text=element_text(colour="black", size=14))  +#
  theme(axis.text.x = element_text(angle = 0, vjust=-4)) +#
  theme(axis.text.y = element_text(margin=margin(t = 0, r = 20, b = 0, l = 0))) +#
  theme(legend.position = "none") +#
  theme(axis.ticks.length=unit(-0.5, "cm")) +#
  scale_x_continuous(labels=part_b_order, expand=c(0.07,0.05), breaks=c(1.2:4.2))+#
  geom_errorbar(aes(ymin=ForPartB$bar_min, #
    x=as.numeric(ForPartB$Group), ymax=ForPartB$bar_max), width=.2) + #
  geom_errorbar(aes(ymin=ForPartB_interest$bar_min, #
    x=c(as.numeric(ForPartB_interest$Group)+barwidth+0.01), #
    ymax=ForPartB_interest$bar_max), width=.2)+#
   ggtitle("(b)") + #
    theme(plot.title = element_text(size = 16))+#
   theme(plot.margin=unit(c(0.5,1.1,1.1,1.1),"cm"))#
#
g3<-ggplot(ForBarPlot_interest, aes(x = Species, y = Effect)) +#
  geom_bar(#
    stat = "identity", position = position_stack(),#
    color = "white", fill = c(rep("grey30", 13), rep("grey80",9))) + #
  ylab("") +#
  theme(panel.background=element_rect(fill="white", colour="white")) +#
  theme(axis.line = element_line(colour = 'black', size = 1)) +#
  theme(axis.title.x = element_text(colour = 'black', angle = 0, size = 16, hjust = 0.5, vjust = 0.2)) +#
  theme(axis.title.y = element_text(colour = 'black', angle = 90, size = 16, hjust = 0.5, vjust = 1)) +#
  theme(axis.text=element_text(colour="black", size=14))  +#
  theme(axis.text.x = element_text(angle = 35, vjust=0.75, hjust=0.9)) +#
  theme(axis.text.y = element_text(margin=margin(t = 0, r = 20, b = 0, l = 0))) +#
  scale_x_discrete(labels=tel_names, expand=c(0.07,0)) +#
  theme(axis.ticks.length=unit(-0.5, "cm")) +#
  geom_errorbar(aes(ymin=c(Effect-error_plot), ymax=c(Effect+error_plot)), width=.2) + #
   ggtitle("(c)") + #
    theme(plot.title = element_text(size = 16))+#
   theme(plot.margin=unit(c(0.5,1.1,1.1,1.1),"cm"))
grid.arrange(g1, g2, g3, nrow = 3)#
grid.rect(width =  0.98, height = 0.98, gp = gpar(lwd = 2, col = "black", fill = NA))
library(ggplot2)#
library(gridExtra)
#################################
#####code for plots:#############
#################################
g1<-ggplot(ForBarPlot, aes(x = Species, y = Effect)) +#
  geom_bar(#
    stat = "identity", position = position_stack(),#
    color = "white", fill = c(rep("grey80",15), rep("grey30",11))#
  ) + ylab("") + xlab("Species") +#
  theme(panel.background=element_rect(fill="white", colour="white")) +#
  theme(axis.line = element_line(colour = 'black', size = 1)) +#
  theme(axis.title.x = element_text(colour = 'black', angle = 0, size =  16, hjust = 0.5, vjust = 0.2)) +#
  theme(axis.title.y = element_text(colour = 'black', angle = 90, size = 16, hjust = 0.5, vjust = 1)) +#
  theme(axis.text=element_text(colour="black", size=14))  +#
  theme(axis.text.x = element_text(angle = 35, vjust=0.8, hjust=1)) +#
  theme(axis.text.y = element_text(margin=margin(t = 0, r = 20, b = 0, l = 0))) +#
  scale_x_discrete(labels=shark_order_names_fig3, expand = c(0.07, 0)) +#
  theme(axis.ticks.length=unit(-0.5, "cm")) +#
  geom_errorbar(aes(ymin=c(Effect-error_plot), ymax=c(Effect+error_plot)), width=.2) + #
   ggtitle("(a)") + #
  theme(plot.title = element_text(size = 16))+#
   theme(plot.margin=unit(c(0.5,1.1,1.1,1.1),"cm"))#
#
   barwidth<-0.35#
#
  g2<-ggplot() +#
  geom_bar(data=ForPartB, mapping=aes(x = as.numeric(Group), y = Effect, #
    fill = Direction), #
    stat = "identity", position = position_stack(), width=barwidth) + #
  geom_bar(data=ForPartB_interest, mapping=aes(x = as.numeric(Group)+barwidth+0.01, y = Effect, #
    fill = Direction), col="black", size=2,#
    stat = "identity", position = position_stack(), width=barwidth) +#
  scale_fill_manual(values = c("Positive" = "grey30", "Negative" = "grey80"))+#
  ylab("Co-occurrence strength") + xlab("Group") +#
  theme(panel.background=element_rect(fill="white", colour="white")) +#
  theme(axis.line = element_line(colour = 'black', size = 1)) +#
  theme(axis.title.x = element_text(colour = 'black', angle = 0, size = 16, hjust = 0.5, vjust = -4)) +#
  theme(axis.title.y = element_text(colour = 'black', angle = 90, size = 16, hjust = 0.5, vjust = 1)) +#
  theme(axis.text=element_text(colour="black", size=14))  +#
  theme(axis.text.x = element_text(angle = 0, vjust=-4)) +#
  theme(axis.text.y = element_text(margin=margin(t = 0, r = 20, b = 0, l = 0))) +#
  theme(legend.position = "none") +#
  theme(axis.ticks.length=unit(-0.5, "cm")) +#
  scale_x_continuous(labels=part_b_order, expand=c(0.07,0.05), breaks=c(1.2:4.2))+#
  geom_errorbar(aes(ymin=ForPartB$bar_min, #
    x=as.numeric(ForPartB$Group), ymax=ForPartB$bar_max), width=.2) + #
  geom_errorbar(aes(ymin=ForPartB_interest$bar_min, #
    x=c(as.numeric(ForPartB_interest$Group)+barwidth+0.01), #
    ymax=ForPartB_interest$bar_max), width=.2)+#
   ggtitle("(b)") + #
    theme(plot.title = element_text(size = 16))+#
   theme(plot.margin=unit(c(0.5,1.1,1.1,1.1),"cm"))#
#
g3<-ggplot(ForBarPlot_interest, aes(x = Species, y = Effect)) +#
  geom_bar(#
    stat = "identity", position = position_stack(),#
    color = "white", fill = c(rep("grey30", 13), rep("grey80",9))) + #
  ylab("") +#
  theme(panel.background=element_rect(fill="white", colour="white")) +#
  theme(axis.line = element_line(colour = 'black', size = 1)) +#
  theme(axis.title.x = element_text(colour = 'black', angle = 0, size = 16, hjust = 0.5, vjust = 0.2)) +#
  theme(axis.title.y = element_text(colour = 'black', angle = 90, size = 16, hjust = 0.5, vjust = 1)) +#
  theme(axis.text=element_text(colour="black", size=14))  +#
  theme(axis.text.x = element_text(angle = 35, vjust=0.75, hjust=0.9)) +#
  theme(axis.text.y = element_text(margin=margin(t = 0, r = 20, b = 0, l = 0))) +#
  scale_x_discrete(labels=tel_names, expand=c(0.07,0)) +#
  theme(axis.ticks.length=unit(-0.5, "cm")) +#
  geom_errorbar(aes(ymin=c(Effect-error_plot), ymax=c(Effect+error_plot)), width=.2) + #
   ggtitle("(c)") + #
    theme(plot.title = element_text(size = 16))+#
   theme(plot.margin=unit(c(0.5,1.1,1.1,1.1),"cm"))
grid.arrange(g1, g2, g3, nrow = 3)#
grid.rect(width =  0.98, height = 0.98, gp = gpar(lwd = 2, col = "black", fill = NA))
#################################
#####code for plots:#############
#################################
g1<-ggplot(ForBarPlot, aes(x = Species, y = Effect)) +#
  geom_bar(#
    stat = "identity", position = position_stack(),#
    color = "white", fill = c(rep("grey30",15), rep("grey80",11))#
  ) + ylab("") + xlab("Species") +#
  theme(panel.background=element_rect(fill="white", colour="white")) +#
  theme(axis.line = element_line(colour = 'black', size = 1)) +#
  theme(axis.title.x = element_text(colour = 'black', angle = 0, size =  16, hjust = 0.5, vjust = 0.2)) +#
  theme(axis.title.y = element_text(colour = 'black', angle = 90, size = 16, hjust = 0.5, vjust = 1)) +#
  theme(axis.text=element_text(colour="black", size=14))  +#
  theme(axis.text.x = element_text(angle = 35, vjust=0.8, hjust=1)) +#
  theme(axis.text.y = element_text(margin=margin(t = 0, r = 20, b = 0, l = 0))) +#
  scale_x_discrete(labels=shark_order_names_fig3, expand = c(0.07, 0)) +#
  theme(axis.ticks.length=unit(-0.5, "cm")) +#
  geom_errorbar(aes(ymin=c(Effect-error_plot), ymax=c(Effect+error_plot)), width=.2) + #
   ggtitle("(a)") + #
  theme(plot.title = element_text(size = 16))+#
   theme(plot.margin=unit(c(0.5,1.1,1.1,1.1),"cm"))#
#
   barwidth<-0.35#
#
  g2<-ggplot() +#
  geom_bar(data=ForPartB, mapping=aes(x = as.numeric(Group), y = Effect, #
    fill = Direction), #
    stat = "identity", position = position_stack(), width=barwidth) + #
  geom_bar(data=ForPartB_interest, mapping=aes(x = as.numeric(Group)+barwidth+0.01, y = Effect, #
    fill = Direction), col="black", size=2,#
    stat = "identity", position = position_stack(), width=barwidth) +#
  scale_fill_manual(values = c("Positive" = "grey30", "Negative" = "grey80"))+#
  ylab("Co-occurrence strength") + xlab("Group") +#
  theme(panel.background=element_rect(fill="white", colour="white")) +#
  theme(axis.line = element_line(colour = 'black', size = 1)) +#
  theme(axis.title.x = element_text(colour = 'black', angle = 0, size = 16, hjust = 0.5, vjust = -4)) +#
  theme(axis.title.y = element_text(colour = 'black', angle = 90, size = 16, hjust = 0.5, vjust = 1)) +#
  theme(axis.text=element_text(colour="black", size=14))  +#
  theme(axis.text.x = element_text(angle = 0, vjust=-4)) +#
  theme(axis.text.y = element_text(margin=margin(t = 0, r = 20, b = 0, l = 0))) +#
  theme(legend.position = "none") +#
  theme(axis.ticks.length=unit(-0.5, "cm")) +#
  scale_x_continuous(labels=part_b_order, expand=c(0.07,0.05), breaks=c(1.2:4.2))+#
  geom_errorbar(aes(ymin=ForPartB$bar_min, #
    x=as.numeric(ForPartB$Group), ymax=ForPartB$bar_max), width=.2) + #
  geom_errorbar(aes(ymin=ForPartB_interest$bar_min, #
    x=c(as.numeric(ForPartB_interest$Group)+barwidth+0.01), #
    ymax=ForPartB_interest$bar_max), width=.2)+#
   ggtitle("(b)") + #
    theme(plot.title = element_text(size = 16))+#
   theme(plot.margin=unit(c(0.5,1.1,1.1,1.1),"cm"))#
#
g3<-ggplot(ForBarPlot_interest, aes(x = Species, y = Effect)) +#
  geom_bar(#
    stat = "identity", position = position_stack(),#
    color = "white", fill = c(rep("grey30", 13), rep("grey80",9))) + #
  ylab("") +#
  theme(panel.background=element_rect(fill="white", colour="white")) +#
  theme(axis.line = element_line(colour = 'black', size = 1)) +#
  theme(axis.title.x = element_text(colour = 'black', angle = 0, size = 16, hjust = 0.5, vjust = 0.2)) +#
  theme(axis.title.y = element_text(colour = 'black', angle = 90, size = 16, hjust = 0.5, vjust = 1)) +#
  theme(axis.text=element_text(colour="black", size=14))  +#
  theme(axis.text.x = element_text(angle = 35, vjust=0.75, hjust=0.9)) +#
  theme(axis.text.y = element_text(margin=margin(t = 0, r = 20, b = 0, l = 0))) +#
  scale_x_discrete(labels=tel_names, expand=c(0.07,0)) +#
  theme(axis.ticks.length=unit(-0.5, "cm")) +#
  geom_errorbar(aes(ymin=c(Effect-error_plot), ymax=c(Effect+error_plot)), width=.2) + #
   ggtitle("(c)") + #
    theme(plot.title = element_text(size = 16))+#
   theme(plot.margin=unit(c(0.5,1.1,1.1,1.1),"cm"))
grid.arrange(g1, g2, g3, nrow = 3)#
grid.rect(width =  0.98, height = 0.98, gp = gpar(lwd = 2, col = "black", fill = NA))
ForPartB
ForPartB_interest
neg_large_interest
sig_neg_large
library(ggplot2)#
library(gridExtra)#
library(cooccur)#
#
##analysis requried#
#Reading in data#
BRUV.MaxN<-read.csv("c:/Users/shark_000/Dropbox/BRUV_Paper/Data_Analysis/Data/BRUV_wide.csv", header=TRUE, stringsAsFactors=FALSE)#
env<-read.csv("c:/Users/shark_000/Dropbox/BRUV_Paper/Data_Analysis/Data/env_wide.csv", header=TRUE, stringsAsFactors=FALSE)#
#
BRUV.MaxN<-read.csv("~/Dropbox/BRUV_Paper/Data_Analysis/Data/BRUV_wide.csv", header=TRUE, stringsAsFactors=FALSE)#
env<-read.csv("~/Dropbox/BRUV_Paper/Data_Analysis/Data/env_wide.csv", header=TRUE, stringsAsFactors=FALSE)#
##Remove species (ie invertebrates) that are not relevant/ are rare#
#Remove krill from analysis#
BRUV.MaxN<-BRUV.MaxN[, -which(names(BRUV.MaxN)=="Euphausiids")]#
#
#Remove pelagic larva/bait fish rarely seen, sea pens, and worms#
BRUV.MaxN<-BRUV.MaxN[, -which(names(BRUV.MaxN)=="Unknown.fish")]#
BRUV.MaxN<-BRUV.MaxN[, -which(names(BRUV.MaxN)=="Larval.fish")]#
BRUV.MaxN<-BRUV.MaxN[, -which(names(BRUV.MaxN)=="Bait.fish...sardine")]#
#
#Remove jellyfish, sea urchins, sea anemones, sea cucumbers, sea pens, and worms#
#BRUV.MaxN<-BRUV.MaxN[, -which(names(BRUV.MaxN)=="Sea urchin")]#
BRUV.MaxN<-BRUV.MaxN[, -which(names(BRUV.MaxN)%in%c("Snail", #
  "Feathery.sea.pen", "Fanworm", #
    "Eunicid.worm", "Sea.anemone", "Starfish", "Seastar", #
    "Spiny.starfish", "Sea.cucumber", #
    "Cape.urchin", "Helmet.shell", "Sea.star", "Papery.burnupena", #
    "Sea.slug", "Tick.shell", "Red.sea.star","False.plume.anemone",#
    "Topshell.snail", "Topshell", "Turban.shell", "Fat.plough.shell", #
    "Root.mouthed.jellyfish", "Sea.urchin", "Jellyfish", "Purple.lipped.dog.whelk" ))]#
#Matrix without rare species (ie 3 instances or less)#
#MaxN_NoRare<-MaxN[,-which(colSums(BRUV.Richness)<=3)]#
#
#Setting the names of various ways of breaking up chondrichthyan class so can subset later - need periods as R deletes the spaces#
all.chon<-c("Dark.shyshark", "Puffadder.shyshark", "Broadnose.sevengill.shark", #
  "Leopard.catshark","Pyjama.shark", "Spearnose.skate", "Biscuit.skate", #
                  "Eagle.ray", "Spotted.gully.shark",#
                  "Bronze.whaler", "Smooth.hammerhead.shark", #
                  "Smooth.hound.shark",  "St..Joseph.shark", "Tiger.catshark", #
                    "Lesser.guitarfish", "Soupfin.shark", #
                    "Shortnose.spurdog","Short.tail.stingray")#
#
all.shyshark<-c("Dark.shyshark", "Puffadder.shyshark", "Leopard.catshark", #
  "Pyjama.shark", "Tiger.catshark")#
#
all.large.shark<-c("Broadnose.sevengill.shark", #
          "Spotted-gully.shark",#
               "Bronze.whaler", "Smooth.hammerhead.shark", #
               "Smooth-hound.shark",  #
                "Soupfin.shark")#
#
all.batoid<-c("Lesser.guitarfish", "Eagle.ray", "Biscuit.skate", #
  "Spearnose.skate", "Short.tail.stingray")#
#
all.crust<-c("Cape.rock.crab", "Hermit.crab", "Masked.crab", "Masked.crab.sp2", #
  "Sandflat.crab", "Three.spotted.swimming.crab", "West.coast.rock.lobster")#
#
all.ceph<-c("Common.octopus", "Chokka.squid")#
#
all.teleost<-c("Bank.steenbras", "Barehead.goby","Barred.fingerfin", "Beaked.sandfish",#
  "Black.seacatfish", "Blacktail", "Blue.hottentot", "Bluefin.gurnard", "Cape.horse.mackerel",#
      "Cape.sole", "Carpenter", "Evileye.blaasop", "Fransmadam", "Galjoen", "Geelbek", #
      "Giant.yellowtail", "Hottentot", "Janbruin", "Jutjaw", "Longsnout.pipefish", "Panga",#
      "Red.roman", "Red.steenbras", "Red.stumpnose", "Redfingers", "Shad", "Silver.kob",#
      "Slender.baardman", "Snakelet", "Spinynose.horsefish", "Steentjie", "Strepie", #
      "Super.klipfish", "Twotone.fingerfin", "White.seacatfish", "White.stumpnose", #
      "Yellowback.fusilier", "Yellowbelly.rock.cod", "Zebra")#
#
sp.of.interest<-c("Red.steenbras", "Galjoen", "Geelbek", "Red.roman", #
  "Red.stumpnose", "Janbruin", "Blacktail", "Shad", "Silver.kob", "Slender.baardman",#
  "West.coast.rock.lobster", "White.stumpnose", "Yellowbelly.rock.cod", "Zebra")#
#
MaxN<-BRUV.MaxN[,-c(1:5)] # Creates abundance only data frame (remove "meta-data" columns)#
#head(MaxN) #Check that I was successful by looking at first few rows#
#
BRUV.Richness<-apply(MaxN, 2, function(x) {as.numeric(x>0)}) # Create data frame that is presence/absence (0 and 1) only
Site.Richness<-aggregate(BRUV.Richness, by=list(env$Site), sum)[,-1] # total number of times each species found per site
Site.Richness<-apply(Site.Richness, 2, function(x) {as.numeric(x>0)}) # Returns data frame to 0 and 1 only - ie yes if species EVER found there, no if NEVER found there
dim(Site.Richness)
co.out.Site<-cooccur(t(Site.Richness), spp_names=TRUE, type="spp_site", thresh=FALSE) # Do co-occur analysis based on site level
print.site<-co.out.Site$results
print.site$effects<-(print.site$obs_cooccur-print.site$exp_cooccur)/167
all.results_chon<-subset(print.site, sp1_name%in%all.chon | sp2_name%in%all.chon)
sig_pos_chon<-subset(all.results_chon, p_gt<0.05)
sig_neg_chon<-subset(all.results_chon, p_lt<0.05)
all.results_shy<-subset(print.site, sp1_name%in%all.shyshark | sp2_name%in%all.shyshark)
sig_pos_shy<-subset(all.results_shy, p_gt<0.05)
sig_neg_shy<-subset(all.results_shy, p_lt<0.05)
all.results_large<-subset(print.site, sp1_name%in%all.large.shark | sp2_name%in%all.large.shark)
sig_pos_large<-subset(all.results_large, p_gt<0.05)
sig_neg_large<-subset(all.results_large, p_lt<0.05)
all.results_batoid<-subset(print.site, sp1_name%in%all.batoid| sp2_name%in%all.batoid)
sig_pos_batoid<-subset(all.results_batoid, p_gt<0.05)
sig_neg_batoid<-subset(all.results_batoid, p_lt<0.05)
all.results_interest<-subset(print.site, sp1_name%in%sp.of.interest | sp2_name%in%sp.of.interest)
sig_pos_interest<-subset(all.results_interest, p_gt<0.05)
sig_neg_interest<-subset(all.results_interest, p_lt<0.05)
all.results_tel<-subset(print.site, sp1_name%in%all.teleost | sp2_name%in%all.teleost)
sig_pos_tel<-subset(all.results_tel, p_gt<0.05)
sig_neg_tel<-subset(all.results_tel, p_lt<0.05)
all.results_ceph<-subset(print.site, sp1_name%in%all.ceph | sp2_name%in%all.ceph)
sig_pos_ceph<-subset(all.results_ceph, p_gt<0.05)
sig_neg_ceph<-subset(all.results_ceph, p_lt<0.05)
all.results_crust<-subset(print.site, sp1_name%in%all.crust | sp2_name%in%all.crust)
sig_pos_crust<-subset(all.results_crust, p_gt<0.05)
sig_neg_crust<-subset(all.results_crust, p_lt<0.05)
ForPlot_effects_pos<-data.frame(species=c(as.character(sig_pos_chon$sp1_name), #
  as.character(sig_pos_chon$sp2_name)), #
  effects=c(sig_pos_chon$effects, sig_pos_chon$effects))#
ForPlot_effects_pos<-subset(ForPlot_effects_pos, species%in%all.chon)#
ForPlot_effects_pos<-subset(ForPlot_effects_pos, !species%in%c("Bronze.whaler", "Shortnose.spurdog", "Hammerhead.shark"))#
#
ForPlot_effects_neg<-data.frame(species=c(as.character(sig_neg_chon$sp1_name), #
  as.character(sig_neg_chon$sp2_name)), #
  effects=c(sig_neg_chon$effects, sig_neg_chon$effects))#
ForPlot_effects_neg<-subset(ForPlot_effects_neg, species%in%all.chon)#
ForPlot_effects_neg<-subset(ForPlot_effects_neg, !species%in%c("Bronze.whaler", "Shortnose.spurdog", "Hammerhead.shark"))#
#
pos_effect<-aggregate(effects~species, ForPlot_effects_pos, mean)#
level_order<-as.character(pos_effect$species[order(-pos_effect$effects)])#
neg_effect<-aggregate(effects~species, ForPlot_effects_neg, mean)#
#
#calculate sd for error bars:#
error_chon_pos<-aggregate(effects~species, ForPlot_effects_pos, sd)#
error_chon_neg<-aggregate(effects~species, ForPlot_effects_neg, sd)#
error_chon<-c(error_chon_pos$effects, error_chon_neg$effects)#
error_chon<-c(error_chon, rep(NA,4))#
#
ForBarPlot1<-data.frame(Species=c(as.character(pos_effect$species),#
as.character(neg_effect$species)), Effect=c(pos_effect$effects, neg_effect$effects))#
#
#add in NA's for species without any significant negative associations:#
ForBarPlot<-rbind(ForBarPlot1, data.frame(Species=c("Eagle.ray", "Lesser.guitarfish", #
  "Short.tail.stingray", "Soupfin.shark"), Effect=rep(NA,4)))#
#
ForBarPlot$error_plot<-error_chon
ForBarPlot$Species<-factor(ForBarPlot$Species, levels=level_order)
#add means for all chondrichthyans, all shysharks, large sharks, batoids#
pos_chon<-mean(sig_pos_chon$effects)#
neg_chon<-mean(sig_neg_chon$effects)#
sd_pos_chon<-sd(sig_pos_chon$effects)#
sd_neg_chon<-sd(sig_neg_chon$effects)#
#
pos_shy<-mean(sig_pos_shy$effects)#
neg_shy<-mean(sig_neg_shy$effects)#
sd_pos_shy<-sd(sig_pos_shy$effects)#
sd_neg_shy<-sd(sig_neg_shy$effects)
pos_large<-mean(sig_pos_large$effects)
pos_large
sig_pos_large
sig_neg_large
nrow(sig_pos_chon) #number of significant positive associations
nrow(sig_neg_chon) #number of significant negative associations
52/nrow(all.results_chon)#
144/nrow(all.results_chon)
range(all.results_chon$effects)
mean(par.out.chon_site$pos)
par.out.chon_site<-par.out_site[which(par.out_site$sppname%in%all.chon),] #Selecting all chondrichthyans #
mean(par.out.chon_site$pos)
par.out_site<-pair.attributes(co.out.Site)# for all species#
#par.out_site[order(-par.out_site$pos),]#
#####################################################
####for chondrichthyans##############################
#####################################################
par.out.chon_site<-par.out_site[which(par.out_site$sppname%in%all.chon),] #Selecting all chondrichthyans #
mean(par.out.chon_site$pos)
#manual effect sizes - just significant associations#
#for chondrichthyans:#
sig_pos_chon$effects<-(sig_pos_chon$obs_cooccur-sig_pos_chon$exp_cooccur)/167#
sig_neg_chon$effects<-(sig_neg_chon$obs_cooccur-sig_neg_chon$exp_cooccur)/167#
#
#for shysharks:#
sig_pos_shy$effects<-(sig_pos_shy$obs_cooccur-sig_pos_shy$exp_cooccur)/167#
sig_neg_shy$effects<-(sig_neg_shy$obs_cooccur-sig_neg_shy$exp_cooccur)/167#
#
#for large sharks:#
sig_pos_large$effects<-(sig_pos_large$obs_cooccur-sig_pos_large$exp_cooccur)/167#
sig_neg_large$effects<-(sig_neg_large$obs_cooccur-sig_neg_large$exp_cooccur)/167#
#
#for batoids:#
sig_pos_batoid$effects<-(sig_pos_batoid$obs_cooccur-sig_pos_batoid$exp_cooccur)/167#
sig_neg_batoid$effects<-(sig_neg_batoid$obs_cooccur-sig_neg_batoid$exp_cooccur)/167#
#
#For species of conservation interest:#
sig_pos_interest$effects<-(sig_pos_interest$obs_cooccur-sig_pos_interest$exp_cooccur)/167#
sig_neg_interest$effects<-(sig_neg_interest$obs_cooccur-sig_neg_interest$exp_cooccur)/167#
#
#For teleosts:#
sig_pos_tel$effects<-(sig_pos_tel$obs_cooccur-sig_pos_tel$exp_cooccur)/167#
sig_neg_tel$effects<-(sig_neg_tel$obs_cooccur-sig_neg_tel$exp_cooccur)/167#
#
#For crustaceans:#
sig_pos_crust$effects<-(sig_pos_crust$obs_cooccur-sig_pos_crust$exp_cooccur)/167#
sig_neg_crust$effects<-(sig_neg_crust$obs_cooccur-sig_neg_crust$exp_cooccur)/167#
#
#For cephalopods:#
sig_pos_ceph$effects<-(sig_pos_ceph$obs_cooccur-sig_pos_ceph$exp_cooccur)/167#
sig_neg_ceph$effects<-(sig_neg_ceph$obs_cooccur-sig_neg_ceph$exp_cooccur)/167
mean(sig_pos_chon$effects)
sd(sig_pos_chon$effects)
mean(par.out.chon_site$pos)
par.out.chon_site
sig_neg_large
###########################
##Co-occurrence analysis###
###########################
#
library(cooccur)#
library(vegan) # for shannon diversity function#
library(ggplot2)#
library(gridExtra)#
library(tidyverse)#
library(network)#
library(igraph)#
library(ggraph)#
library(qgraph)#
library(CINNA)#
library(sna)#
#
#Reading in data#
BRUV.MaxN<-read.csv("c:/Users/shark_000/Dropbox/BRUV_Paper/Data_Analysis/Data/BRUV_wide.csv", header=TRUE, stringsAsFactors=FALSE)#
env<-read.csv("c:/Users/shark_000/Dropbox/BRUV_Paper/Data_Analysis/Data/env_wide.csv", header=TRUE, stringsAsFactors=FALSE)#
#
BRUV.MaxN<-read.csv("~/Dropbox/BRUV_Paper/Data_Analysis/Data/BRUV_wide.csv", header=TRUE, stringsAsFactors=FALSE)#
env<-read.csv("~/Dropbox/BRUV_Paper/Data_Analysis/Data/env_wide.csv", header=TRUE, stringsAsFactors=FALSE)#
#
##Remove species (ie invertebrates) that are not relevant/ are rare#
#Remove krill from analysis#
BRUV.MaxN<-BRUV.MaxN[, -which(names(BRUV.MaxN)=="Euphausiids")]#
#
#Remove pelagic larva/bait fish rarely seen, sea pens, and worms#
BRUV.MaxN<-BRUV.MaxN[, -which(names(BRUV.MaxN)=="Unknown.fish")]#
BRUV.MaxN<-BRUV.MaxN[, -which(names(BRUV.MaxN)=="Larval.fish")]#
BRUV.MaxN<-BRUV.MaxN[, -which(names(BRUV.MaxN)=="Bait.fish...sardine")]#
#
#Remove jellyfish, sea urchins, sea anemones, sea cucumbers, sea pens, and worms#
#BRUV.MaxN<-BRUV.MaxN[, -which(names(BRUV.MaxN)=="Sea urchin")]#
BRUV.MaxN<-BRUV.MaxN[, -which(names(BRUV.MaxN)%in%c("Snail", #
  "Feathery.sea.pen", "Fanworm", #
    "Eunicid.worm", "Sea.anemone", "Starfish", "Seastar", #
    "Spiny.starfish", "Sea.cucumber", #
    "Cape.urchin", "Helmet.shell", "Sea.star", "Papery.burnupena", #
    "Sea.slug", "Tick.shell", "Red.sea.star","False.plume.anemone",#
    "Topshell.snail", "Topshell", "Turban.shell", "Fat.plough.shell", #
    "Root.mouthed.jellyfish", "Sea.urchin", "Jellyfish", "Purple.lipped.dog.whelk" ))]#
#Matrix without rare species (ie 3 instances or less)#
#MaxN_NoRare<-MaxN[,-which(colSums(BRUV.Richness)<=3)]#
#
#Setting the names of various ways of breaking up chondrichthyan class so can subset later - need periods as R deletes the spaces#
all.chon<-c("Dark.shyshark", "Puffadder.shyshark", "Broadnose.sevengill.shark", #
  "Leopard.catshark","Pyjama.shark", "Spearnose.skate", "Biscuit.skate", #
                  "Eagle.ray", "Spotted.gully.shark",#
                  "Bronze.whaler", "Smooth.hammerhead.shark", #
                  "Smooth.hound.shark",  "St..Joseph.shark", "Tiger.catshark", #
                    "Lesser.guitarfish", "Soupfin.shark", #
                    "Shortnose.spurdog","Short.tail.stingray")#
#
all.shyshark<-c("Dark.shyshark", "Puffadder.shyshark", "Leopard.catshark", #
  "Pyjama.shark", "Tiger.catshark")#
#
all.large.shark<-c("Broadnose.sevengill.shark", #
          "Spotted-gully.shark",#
               "Bronze.whaler", "Smooth.hammerhead.shark", #
               "Smooth-hound.shark",  #
                "Soupfin.shark")#
#
all.batoid<-c("Lesser.guitarfish", "Eagle.ray", "Biscuit.skate", #
  "Spearnose.skate", "Short.tail.stingray")#
#
all.crust<-c("Cape.rock.crab", "Hermit.crab", "Masked.crab", "Masked.crab.sp2", #
  "Sandflat.crab", "Three.spotted.swimming.crab", "West.coast.rock.lobster")#
#
all.ceph<-c("Common.octopus", "Chokka.squid")#
#
all.teleost<-c("Bank.steenbras", "Barehead.goby","Barred.fingerfin", "Beaked.sandfish",#
  "Black.seacatfish", "Blacktail", "Blue.hottentot", "Bluefin.gurnard", "Cape.horse.mackerel",#
      "Cape.sole", "Carpenter", "Evileye.blaasop", "Fransmadam", "Galjoen", "Geelbek", #
      "Giant.yellowtail", "Hottentot", "Janbruin", "Jutjaw", "Longsnout.pipefish", "Panga",#
      "Red.roman", "Red.steenbras", "Red.stumpnose", "Redfingers", "Shad", "Silver.kob",#
      "Slender.baardman", "Snakelet", "Spinynose.horsefish", "Steentjie", "Strepie", #
      "Super.klipfish", "Twotone.fingerfin", "White.seacatfish", "White.stumpnose", #
      "Yellowback.fusilier", "Yellowbelly.rock.cod", "Zebra")#
#
sp.of.interest<-c("Red.steenbras", "Galjoen", "Geelbek", "Red.roman", #
  "Red.stumpnose", "Janbruin", "Blacktail", "Shad", "Silver.kob", "Slender.baardman",#
  "West.coast.rock.lobster", "White.stumpnose", "Yellowbelly.rock.cod", "Zebra")#
#
MaxN<-BRUV.MaxN[,-c(1:5)] # Creates abundance only data frame (remove "meta-data" columns)#
#head(MaxN) #Check that I was successful by looking at first few rows#
#
BRUV.Richness<-apply(MaxN, 2, function(x) {as.numeric(x>0)}) # Create data frame that is presence/absence (0 and 1) only#
#Use below for co-occurrence by site rather than BRUV drop (either could be informative):#
Site.Richness<-aggregate(BRUV.Richness, by=list(env$Site), sum)[,-1] # total number of times each species found per site#
Site.Richness<-apply(Site.Richness, 2, function(x) {as.numeric(x>0)}) # Returns data frame to 0 and 1 only - ie yes if species EVER found there, no if NEVER found there#
#
#####
##Chondrichthyans considered as individual "species"#
#####
#common_names<-common_names[order(factor(common_names))]#
#colnames(Site.Richness)<-common_names#
co.out.Site<-cooccur(t(Site.Richness), spp_names=TRUE, type="spp_site", thresh=FALSE) # Do co-occur analysis based on site level#
#####
##Chondrichthyan co-occurrence relative to species of interest #
#####
#
Site.Richness.sp.interest<-Site.Richness[,which(colnames(Site.Richness)%in%c(all.chon,#
  sp.of.interest))]#
#
co.out.Site.sp.interest<-cooccur(t(Site.Richness.sp.interest), spp_names=TRUE, type="spp_site", thresh=FALSE) # Do co-occur analysis based on site level#
#
#####
##Shyshark co-occurrence relative to species of interest #
#####
#
Site.Richness.sp.interest_shyshark<-Site.Richness[,which(colnames(Site.Richness)%in%c(all.shyshark,#
  sp.of.interest))]#
#
co.out.Site.sp.interest_shyshark<-cooccur(t(Site.Richness.sp.interest_shyshark), spp_names=TRUE, type="spp_site", thresh=FALSE) # Do co-occur analysis based on site level#
#
#####
##Large shark co-occurrence relative to species of interest #
#####
#
Site.Richness.sp.interest_large<-Site.Richness[,which(colnames(Site.Richness)%in%c(all.large.shark,#
  sp.of.interest))]#
#
co.out.Site.sp.interest_large<-cooccur(t(Site.Richness.sp.interest_large), spp_names=TRUE, type="spp_site", thresh=FALSE) # Do co-occur analysis based on site level#
#
#####
##Batoid co-occurrence relative to species of interest #
#####
#
Site.Richness.sp.interest_batoid<-Site.Richness[,which(colnames(Site.Richness)%in%c(all.batoid,#
  sp.of.interest))]#
#
co.out.Site.sp.interest_batoid<-cooccur(t(Site.Richness.sp.interest_batoid), spp_names=TRUE, type="spp_site", thresh=FALSE) # Do co-occur analysis based on site level#
############################################
##########Question 1########################
############################################
#
###########################################  #
#Number of associations:####################
########################################### #
#
###########################
####per species groups:####
###########################
#for all chondrichthyans#
#
print.site<-co.out.Site$results#
#strongest interactions#
print.site$effects<-(print.site$obs_cooccur-print.site$exp_cooccur)/167#
#
print.site_pos<-subset(print.site, p_gt<0.05) #
print.site_pos<-print.site_pos[order(-print.site_pos$effects),]#
print.site_pos[which(print.site_pos$sp2_name=="Red.stumpnose"),] #positive interactions#
#
all.results_chon<-subset(print.site, sp1_name%in%all.chon | sp2_name%in%all.chon)#
#
sig_pos_chon<-subset(all.results_chon, p_gt<0.05) #
sig_neg_chon<-subset(all.results_chon, p_lt<0.05) #
nrow(sig_pos_chon) #number of significant positive associations#
nrow(sig_neg_chon) #number of significant negative associations#
#
(nrow(all.results_chon)-nrow(sig_pos_chon)-nrow(sig_neg_chon))#
#
52/nrow(all.results_chon)#
144/nrow(all.results_chon)#
#
hist(subset(print.site, sp1_name=="Dark.shyshark")$effects)#
range(all.results_chon$effects)#
#
#for all chondrichthyans relative to species of interest#
#
all.results_int1<-subset(print.site, sp1_name%in%all.chon & sp2_name%in%sp.of.interest)#
all.results_int2<-subset(print.site, sp1_name%in%sp.of.interest & sp2_name%in%all.chon)#
#
all.results_int<-rbind(all.results_int1, all.results_int2)#
#
sig_pos_int<-subset(all.results_int, p_gt<0.05) #
#
sig_neg_int<-subset(all.results_int, p_lt<0.05) #
#
nrow(sig_pos_int)/nrow(all.results_int) #percent of significant positive associations#
nrow(sig_neg_int)/nrow(all.results_int) #percent of significant negative associations#
#
(nrow(all.results_int)-nrow(sig_pos_int)-nrow(sig_neg_int))/nrow(all.results_int)#
#for species of interest#
#
all.results_interest<-subset(print.site, sp1_name%in%sp.of.interest | sp2_name%in%sp.of.interest)#
#
sig_pos_interest<-subset(all.results_interest, p_gt<0.05) #
sig_neg_interest<-subset(all.results_interest, p_lt<0.05) #
nrow(sig_pos_interest) #number of significant positive associations#
nrow(sig_neg_interest) #number of significant negative associations#
#
nrow(all.results_interest)-nrow(sig_pos_interest)-nrow(sig_neg_interest)#
#
#for teleosts#
#
all.results_tel<-subset(print.site, sp1_name%in%all.teleost | sp2_name%in%all.teleost)#
#
sig_pos_tel<-subset(all.results_tel, p_gt<0.05) #
sig_neg_tel<-subset(all.results_tel, p_lt<0.05) #
nrow(sig_pos_tel)/nrow(all.results_tel) #number of significant positive associations#
nrow(sig_neg_tel)/nrow(all.results_tel) #number of significant negative associations#
#
nrow(all.results_tel)-nrow(sig_pos_tel)-nrow(sig_neg_tel)#
#
#for cephalopods#
#
all.results_ceph<-subset(print.site, sp1_name%in%all.ceph | sp2_name%in%all.ceph)#
#
sig_pos_ceph<-subset(all.results_ceph, p_gt<0.05) #
sig_neg_ceph<-subset(all.results_ceph, p_lt<0.05) #
nrow(sig_pos_ceph) #number of significant positive associations#
nrow(sig_neg_ceph) #number of significant negative associations#
#
nrow(all.results_ceph)-nrow(sig_pos_ceph)-nrow(sig_neg_ceph)#
#
#for crustaceans#
#
all.results_crust<-subset(print.site, sp1_name%in%all.crust | sp2_name%in%all.crust)#
#
sig_pos_crust<-subset(all.results_crust, p_gt<0.05) #
sig_neg_crust<-subset(all.results_crust, p_lt<0.05) #
nrow(sig_pos_crust) #number of significant positive associations#
nrow(sig_neg_crust) #number of significant negative associations#
#
nrow(all.results_crust)-nrow(sig_pos_crust)-nrow(sig_neg_crust)#
#
#for shysharks#
#
all.results_shy<-subset(print.site, sp1_name%in%all.shyshark | sp2_name%in%all.shyshark)#
#
sig_pos_shy<-subset(all.results_shy, p_gt<0.05) #
sig_neg_shy<-subset(all.results_shy, p_lt<0.05) #
nrow(sig_pos_shy) #number of significant positive associations#
nrow(sig_neg_shy) #number of significant negative associations#
#
nrow(all.results_shy)-nrow(sig_pos_shy)-nrow(sig_neg_shy)#
#
#for large sharks#
#
all.results_large<-subset(print.site, sp1_name%in%all.large.shark | sp2_name%in%all.large.shark)#
#
sig_pos_large<-subset(all.results_large, p_gt<0.05) #
sig_neg_large<-subset(all.results_large, p_lt<0.05) #
nrow(sig_pos_large) #number of significant positive associations#
nrow(sig_neg_large) #number of significant negative associations#
#
nrow(all.results_large)-nrow(sig_pos_large)-nrow(sig_neg_large)#
#
#for batoids#
#
all.results_batoid<-subset(print.site, sp1_name%in%all.batoid| sp2_name%in%all.batoid)#
#
sig_pos_batoid<-subset(all.results_batoid, p_gt<0.05) #
sig_neg_batoid<-subset(all.results_batoid, p_lt<0.05) #
nrow(sig_pos_batoid) #number of significant positive associations#
nrow(sig_neg_batoid) #number of significant negative associations#
#
nrow(all.results_batoid)-nrow(sig_pos_batoid)-nrow(sig_neg_batoid)
par.out_site<-pair.attributes(co.out.Site)# for all species
par.out.chon_site<-par.out_site[which(par.out_site$sppname%in%all.chon),] #Selecting all chondrichthyans #
#
rowSums(par.out.chon_site[,4:6])
sig_pos_chon
###########################
##Co-occurrence analysis###
###########################
#
library(cooccur)#
library(vegan) # for shannon diversity function#
library(ggplot2)#
library(gridExtra)#
library(tidyverse)#
library(network)#
library(igraph)#
library(ggraph)#
library(qgraph)#
library(CINNA)#
library(sna)#
#
#Reading in data#
BRUV.MaxN<-read.csv("c:/Users/shark_000/Dropbox/BRUV_Paper/Data_Analysis/Data/BRUV_wide.csv", header=TRUE, stringsAsFactors=FALSE)#
env<-read.csv("c:/Users/shark_000/Dropbox/BRUV_Paper/Data_Analysis/Data/env_wide.csv", header=TRUE, stringsAsFactors=FALSE)#
#
BRUV.MaxN<-read.csv("~/Dropbox/BRUV_Paper/Data_Analysis/Data/BRUV_wide.csv", header=TRUE, stringsAsFactors=FALSE)#
env<-read.csv("~/Dropbox/BRUV_Paper/Data_Analysis/Data/env_wide.csv", header=TRUE, stringsAsFactors=FALSE)#
#
##Remove species (ie invertebrates) that are not relevant/ are rare#
#Remove krill from analysis#
BRUV.MaxN<-BRUV.MaxN[, -which(names(BRUV.MaxN)=="Euphausiids")]#
#
#Remove pelagic larva/bait fish rarely seen, sea pens, and worms#
BRUV.MaxN<-BRUV.MaxN[, -which(names(BRUV.MaxN)=="Unknown.fish")]#
BRUV.MaxN<-BRUV.MaxN[, -which(names(BRUV.MaxN)=="Larval.fish")]#
BRUV.MaxN<-BRUV.MaxN[, -which(names(BRUV.MaxN)=="Bait.fish...sardine")]#
#
#Remove jellyfish, sea urchins, sea anemones, sea cucumbers, sea pens, and worms#
#BRUV.MaxN<-BRUV.MaxN[, -which(names(BRUV.MaxN)=="Sea urchin")]#
BRUV.MaxN<-BRUV.MaxN[, -which(names(BRUV.MaxN)%in%c("Snail", #
  "Feathery.sea.pen", "Fanworm", #
    "Eunicid.worm", "Sea.anemone", "Starfish", "Seastar", #
    "Spiny.starfish", "Sea.cucumber", #
    "Cape.urchin", "Helmet.shell", "Sea.star", "Papery.burnupena", #
    "Sea.slug", "Tick.shell", "Red.sea.star","False.plume.anemone",#
    "Topshell.snail", "Topshell", "Turban.shell", "Fat.plough.shell", #
    "Root.mouthed.jellyfish", "Sea.urchin", "Jellyfish", "Purple.lipped.dog.whelk" ))]#
#Matrix without rare species (ie 3 instances or less)#
#MaxN_NoRare<-MaxN[,-which(colSums(BRUV.Richness)<=3)]#
#
#Setting the names of various ways of breaking up chondrichthyan class so can subset later - need periods as R deletes the spaces#
all.chon<-c("Dark.shyshark", "Puffadder.shyshark", "Broadnose.sevengill.shark", #
  "Leopard.catshark","Pyjama.shark", "Spearnose.skate", "Biscuit.skate", #
                  "Eagle.ray", "Spotted.gully.shark",#
                  "Bronze.whaler", "Smooth.hammerhead.shark", #
                  "Smooth.hound.shark",  "St..Joseph.shark", "Tiger.catshark", #
                    "Lesser.guitarfish", "Soupfin.shark", #
                    "Shortnose.spurdog","Short.tail.stingray")#
#
all.shyshark<-c("Dark.shyshark", "Puffadder.shyshark", "Leopard.catshark", #
  "Pyjama.shark", "Tiger.catshark")#
#
all.large.shark<-c("Broadnose.sevengill.shark", #
          "Spotted-gully.shark",#
               "Bronze.whaler", "Smooth.hammerhead.shark", #
               "Smooth-hound.shark",  #
                "Soupfin.shark")#
#
all.batoid<-c("Lesser.guitarfish", "Eagle.ray", "Biscuit.skate", #
  "Spearnose.skate", "Short.tail.stingray")#
#
all.crust<-c("Cape.rock.crab", "Hermit.crab", "Masked.crab", "Masked.crab.sp2", #
  "Sandflat.crab", "Three.spotted.swimming.crab", "West.coast.rock.lobster")#
#
all.ceph<-c("Common.octopus", "Chokka.squid")#
#
all.teleost<-c("Bank.steenbras", "Barehead.goby","Barred.fingerfin", "Beaked.sandfish",#
  "Black.seacatfish", "Blacktail", "Blue.hottentot", "Bluefin.gurnard", "Cape.horse.mackerel",#
      "Cape.sole", "Carpenter", "Evileye.blaasop", "Fransmadam", "Galjoen", "Geelbek", #
      "Giant.yellowtail", "Hottentot", "Janbruin", "Jutjaw", "Longsnout.pipefish", "Panga",#
      "Red.roman", "Red.steenbras", "Red.stumpnose", "Redfingers", "Shad", "Silver.kob",#
      "Slender.baardman", "Snakelet", "Spinynose.horsefish", "Steentjie", "Strepie", #
      "Super.klipfish", "Twotone.fingerfin", "White.seacatfish", "White.stumpnose", #
      "Yellowback.fusilier", "Yellowbelly.rock.cod", "Zebra")#
#
sp.of.interest<-c("Red.steenbras", "Galjoen", "Geelbek", "Red.roman", #
  "Red.stumpnose", "Janbruin", "Blacktail", "Shad", "Silver.kob", "Slender.baardman",#
  "West.coast.rock.lobster", "White.stumpnose", "Yellowbelly.rock.cod", "Zebra")#
#
MaxN<-BRUV.MaxN[,-c(1:5)] # Creates abundance only data frame (remove "meta-data" columns)#
#head(MaxN) #Check that I was successful by looking at first few rows#
#
BRUV.Richness<-apply(MaxN, 2, function(x) {as.numeric(x>0)}) # Create data frame that is presence/absence (0 and 1) only#
#Use below for co-occurrence by site rather than BRUV drop (either could be informative):#
Site.Richness<-aggregate(BRUV.Richness, by=list(env$Site), sum)[,-1] # total number of times each species found per site#
Site.Richness<-apply(Site.Richness, 2, function(x) {as.numeric(x>0)}) # Returns data frame to 0 and 1 only - ie yes if species EVER found there, no if NEVER found there#
#
#####
##Chondrichthyans considered as individual "species"#
#####
#common_names<-common_names[order(factor(common_names))]#
#colnames(Site.Richness)<-common_names#
co.out.Site<-cooccur(t(Site.Richness), spp_names=TRUE, type="spp_site", thresh=FALSE) # Do co-occur analysis based on site level#
#####
##Chondrichthyan co-occurrence relative to species of interest #
#####
#
Site.Richness.sp.interest<-Site.Richness[,which(colnames(Site.Richness)%in%c(all.chon,#
  sp.of.interest))]#
#
co.out.Site.sp.interest<-cooccur(t(Site.Richness.sp.interest), spp_names=TRUE, type="spp_site", thresh=FALSE) # Do co-occur analysis based on site level#
#
#####
##Shyshark co-occurrence relative to species of interest #
#####
#
Site.Richness.sp.interest_shyshark<-Site.Richness[,which(colnames(Site.Richness)%in%c(all.shyshark,#
  sp.of.interest))]#
#
co.out.Site.sp.interest_shyshark<-cooccur(t(Site.Richness.sp.interest_shyshark), spp_names=TRUE, type="spp_site", thresh=FALSE) # Do co-occur analysis based on site level#
#
#####
##Large shark co-occurrence relative to species of interest #
#####
#
Site.Richness.sp.interest_large<-Site.Richness[,which(colnames(Site.Richness)%in%c(all.large.shark,#
  sp.of.interest))]#
#
co.out.Site.sp.interest_large<-cooccur(t(Site.Richness.sp.interest_large), spp_names=TRUE, type="spp_site", thresh=FALSE) # Do co-occur analysis based on site level#
#
#####
##Batoid co-occurrence relative to species of interest #
#####
#
Site.Richness.sp.interest_batoid<-Site.Richness[,which(colnames(Site.Richness)%in%c(all.batoid,#
  sp.of.interest))]#
#
co.out.Site.sp.interest_batoid<-cooccur(t(Site.Richness.sp.interest_batoid), spp_names=TRUE, type="spp_site", thresh=FALSE) # Do co-occur analysis based on site level#
############################################
##########Question 1########################
############################################
#
###########################################  #
#Number of associations:####################
########################################### #
#
###########################
####per species groups:####
###########################
#for all chondrichthyans#
#
print.site<-co.out.Site$results#
#strongest interactions#
print.site$effects<-(print.site$obs_cooccur-print.site$exp_cooccur)/167#
#
print.site_pos<-subset(print.site, p_gt<0.05) #
print.site_pos<-print.site_pos[order(-print.site_pos$effects),]#
print.site_pos[which(print.site_pos$sp2_name=="Red.stumpnose"),] #positive interactions#
#
all.results_chon<-subset(print.site, sp1_name%in%all.chon | sp2_name%in%all.chon)#
#
sig_pos_chon<-subset(all.results_chon, p_gt<0.05) #
sig_neg_chon<-subset(all.results_chon, p_lt<0.05) #
nrow(sig_pos_chon) #number of significant positive associations#
nrow(sig_neg_chon) #number of significant negative associations#
#
(nrow(all.results_chon)-nrow(sig_pos_chon)-nrow(sig_neg_chon))#
#
52/nrow(all.results_chon)#
144/nrow(all.results_chon)#
#
hist(subset(print.site, sp1_name=="Dark.shyshark")$effects)#
range(all.results_chon$effects)#
#
#for all chondrichthyans relative to species of interest#
#
all.results_int1<-subset(print.site, sp1_name%in%all.chon & sp2_name%in%sp.of.interest)#
all.results_int2<-subset(print.site, sp1_name%in%sp.of.interest & sp2_name%in%all.chon)#
#
all.results_int<-rbind(all.results_int1, all.results_int2)#
#
sig_pos_int<-subset(all.results_int, p_gt<0.05) #
#
sig_neg_int<-subset(all.results_int, p_lt<0.05) #
#
nrow(sig_pos_int)/nrow(all.results_int) #percent of significant positive associations#
nrow(sig_neg_int)/nrow(all.results_int) #percent of significant negative associations#
#
(nrow(all.results_int)-nrow(sig_pos_int)-nrow(sig_neg_int))/nrow(all.results_int)#
#for species of interest#
#
all.results_interest<-subset(print.site, sp1_name%in%sp.of.interest | sp2_name%in%sp.of.interest)#
#
sig_pos_interest<-subset(all.results_interest, p_gt<0.05) #
sig_neg_interest<-subset(all.results_interest, p_lt<0.05) #
nrow(sig_pos_interest) #number of significant positive associations#
nrow(sig_neg_interest) #number of significant negative associations#
#
nrow(all.results_interest)-nrow(sig_pos_interest)-nrow(sig_neg_interest)#
#
#for teleosts#
#
all.results_tel<-subset(print.site, sp1_name%in%all.teleost | sp2_name%in%all.teleost)#
#
sig_pos_tel<-subset(all.results_tel, p_gt<0.05) #
sig_neg_tel<-subset(all.results_tel, p_lt<0.05) #
nrow(sig_pos_tel)/nrow(all.results_tel) #number of significant positive associations#
nrow(sig_neg_tel)/nrow(all.results_tel) #number of significant negative associations#
#
nrow(all.results_tel)-nrow(sig_pos_tel)-nrow(sig_neg_tel)#
#
#for cephalopods#
#
all.results_ceph<-subset(print.site, sp1_name%in%all.ceph | sp2_name%in%all.ceph)#
#
sig_pos_ceph<-subset(all.results_ceph, p_gt<0.05) #
sig_neg_ceph<-subset(all.results_ceph, p_lt<0.05) #
nrow(sig_pos_ceph) #number of significant positive associations#
nrow(sig_neg_ceph) #number of significant negative associations#
#
nrow(all.results_ceph)-nrow(sig_pos_ceph)-nrow(sig_neg_ceph)#
#
#for crustaceans#
#
all.results_crust<-subset(print.site, sp1_name%in%all.crust | sp2_name%in%all.crust)#
#
sig_pos_crust<-subset(all.results_crust, p_gt<0.05) #
sig_neg_crust<-subset(all.results_crust, p_lt<0.05) #
nrow(sig_pos_crust) #number of significant positive associations#
nrow(sig_neg_crust) #number of significant negative associations#
#
nrow(all.results_crust)-nrow(sig_pos_crust)-nrow(sig_neg_crust)#
#
#for shysharks#
#
all.results_shy<-subset(print.site, sp1_name%in%all.shyshark | sp2_name%in%all.shyshark)#
#
sig_pos_shy<-subset(all.results_shy, p_gt<0.05) #
sig_neg_shy<-subset(all.results_shy, p_lt<0.05) #
nrow(sig_pos_shy) #number of significant positive associations#
nrow(sig_neg_shy) #number of significant negative associations#
#
nrow(all.results_shy)-nrow(sig_pos_shy)-nrow(sig_neg_shy)#
#
#for large sharks#
#
all.results_large<-subset(print.site, sp1_name%in%all.large.shark | sp2_name%in%all.large.shark)#
#
sig_pos_large<-subset(all.results_large, p_gt<0.05) #
sig_neg_large<-subset(all.results_large, p_lt<0.05) #
nrow(sig_pos_large) #number of significant positive associations#
nrow(sig_neg_large) #number of significant negative associations#
#
nrow(all.results_large)-nrow(sig_pos_large)-nrow(sig_neg_large)#
#
#for batoids#
#
all.results_batoid<-subset(print.site, sp1_name%in%all.batoid| sp2_name%in%all.batoid)#
#
sig_pos_batoid<-subset(all.results_batoid, p_gt<0.05) #
sig_neg_batoid<-subset(all.results_batoid, p_lt<0.05) #
nrow(sig_pos_batoid) #number of significant positive associations#
nrow(sig_neg_batoid) #number of significant negative associations#
#
nrow(all.results_batoid)-nrow(sig_pos_batoid)-nrow(sig_neg_batoid)#
#####################################################################################
#####################individual species associations ################################
#####################################################################################
#
par.out_site<-pair.attributes(co.out.Site)# for all species#
#par.out_site[order(-par.out_site$pos),]#
#####################################################
####for chondrichthyans##############################
#####################################################
par.out.chon_site<-par.out_site[which(par.out_site$sppname%in%all.chon),] #Selecting all chondrichthyans #
#
rowSums(par.out.chon_site[,4:6])#
#
#####################################################
####for shysharks and batoids and large sharks#######
#####################################################
par.out_site.shy<-par.out_site[which(par.out_site$sppname%in%all.shyshark),] #Selecting just shysharks for example#
#
par.out_site.batoid<-par.out_site[which(par.out_site$sppname%in%all.batoid),] #Selecting all batoids#
#
par.out_site.large<-par.out_site[which(par.out_site$sppname%in%all.large.shark),] #Selecting all large sharks#
#
############################
#teleosts co-occurrence#
###############################
par.out.teleost_site<-par.out_site[which(par.out_site$sppname%in%all.teleost),] #Selecting all teleosts#
#
#species of interest#
#
par.out.interest_site<-par.out_site[which(par.out_site$sppname%in%sp.of.interest),] #Selecting all teleosts#
#
#par.out_site_group.tel[which(par.out_site_group.tel$sppname=="tel.site"),] #Selecting all teleosts#
#
############################
#crustacean co-occurrence#
###############################
par.out.crust_site<-par.out_site[which(par.out_site$sppname%in%all.crust),] #Selecting all teleosts#
#
###############################
#cephalopod co-occurrence#
###############################
par.out.ceph_site<-par.out_site[which(par.out_site$sppname%in%all.ceph),] #Selecting all teleosts
sig_pos_chon
all.results_chon
mean(sig_pos_chon$effects)
sd(sig_pos_chon$effects)
mean(sig_neg_chon$effects)
neg_large_interest
sig_neg_large
library(cooccur)#
library(vegan) # for shannon diversity function#
library(ggplot2)#
library(gridExtra)#
library(tidyverse)#
library(network)#
library(igraph)#
library(ggraph)#
library(qgraph)#
library(CINNA)#
library(sna)#
#
#Reading in data#
BRUV.MaxN<-read.csv("c:/Users/shark_000/Dropbox/BRUV_Paper/Data_Analysis/Data/BRUV_wide.csv", header=TRUE, stringsAsFactors=FALSE)#
env<-read.csv("c:/Users/shark_000/Dropbox/BRUV_Paper/Data_Analysis/Data/env_wide.csv", header=TRUE, stringsAsFactors=FALSE)#
#
BRUV.MaxN<-read.csv("~/Dropbox/BRUV_Paper/Data_Analysis/Data/BRUV_wide.csv", header=TRUE, stringsAsFactors=FALSE)#
env<-read.csv("~/Dropbox/BRUV_Paper/Data_Analysis/Data/env_wide.csv", header=TRUE, stringsAsFactors=FALSE)#
#
##Remove species (ie invertebrates) that are not relevant/ are rare#
#Remove krill from analysis#
BRUV.MaxN<-BRUV.MaxN[, -which(names(BRUV.MaxN)=="Euphausiids")]#
#
#Remove pelagic larva/bait fish rarely seen, sea pens, and worms#
BRUV.MaxN<-BRUV.MaxN[, -which(names(BRUV.MaxN)=="Unknown.fish")]#
BRUV.MaxN<-BRUV.MaxN[, -which(names(BRUV.MaxN)=="Larval.fish")]#
BRUV.MaxN<-BRUV.MaxN[, -which(names(BRUV.MaxN)=="Bait.fish...sardine")]#
#
#Remove jellyfish, sea urchins, sea anemones, sea cucumbers, sea pens, and worms#
#BRUV.MaxN<-BRUV.MaxN[, -which(names(BRUV.MaxN)=="Sea urchin")]#
BRUV.MaxN<-BRUV.MaxN[, -which(names(BRUV.MaxN)%in%c("Snail", #
  "Feathery.sea.pen", "Fanworm", #
    "Eunicid.worm", "Sea.anemone", "Starfish", "Seastar", #
    "Spiny.starfish", "Sea.cucumber", #
    "Cape.urchin", "Helmet.shell", "Sea.star", "Papery.burnupena", #
    "Sea.slug", "Tick.shell", "Red.sea.star","False.plume.anemone",#
    "Topshell.snail", "Topshell", "Turban.shell", "Fat.plough.shell", #
    "Root.mouthed.jellyfish", "Sea.urchin", "Jellyfish", "Purple.lipped.dog.whelk" ))]#
#Matrix without rare species (ie 3 instances or less)#
#MaxN_NoRare<-MaxN[,-which(colSums(BRUV.Richness)<=3)]#
#
#Setting the names of various ways of breaking up chondrichthyan class so can subset later - need periods as R deletes the spaces#
all.chon<-c("Dark.shyshark", "Puffadder.shyshark", "Broadnose.sevengill.shark", #
  "Leopard.catshark","Pyjama.shark", "Spearnose.skate", "Biscuit.skate", #
                  "Eagle.ray", "Spotted.gully.shark",#
                  "Bronze.whaler", "Smooth.hammerhead.shark", #
                  "Smooth.hound.shark",  "St..Joseph.shark", "Tiger.catshark", #
                    "Lesser.guitarfish", "Soupfin.shark", #
                    "Shortnose.spurdog","Short.tail.stingray")#
#
all.shyshark<-c("Dark.shyshark", "Puffadder.shyshark", "Leopard.catshark", #
  "Pyjama.shark", "Tiger.catshark")#
#
all.large.shark<-c("Broadnose.sevengill.shark", #
          "Spotted.gully.shark",#
               "Bronze.whaler", "Smooth.hammerhead.shark", #
               "Smooth.hound.shark",  #
                "Soupfin.shark")#
#
all.batoid<-c("Lesser.guitarfish", "Eagle.ray", "Biscuit.skate", #
  "Spearnose.skate", "Short.tail.stingray")#
#
all.crust<-c("Cape.rock.crab", "Hermit.crab", "Masked.crab", "Masked.crab.sp2", #
  "Sandflat.crab", "Three.spotted.swimming.crab", "West.coast.rock.lobster")#
#
all.ceph<-c("Common.octopus", "Chokka.squid")#
#
all.teleost<-c("Bank.steenbras", "Barehead.goby","Barred.fingerfin", "Beaked.sandfish",#
  "Black.seacatfish", "Blacktail", "Blue.hottentot", "Bluefin.gurnard", "Cape.horse.mackerel",#
      "Cape.sole", "Carpenter", "Evileye.blaasop", "Fransmadam", "Galjoen", "Geelbek", #
      "Giant.yellowtail", "Hottentot", "Janbruin", "Jutjaw", "Longsnout.pipefish", "Panga",#
      "Red.roman", "Red.steenbras", "Red.stumpnose", "Redfingers", "Shad", "Silver.kob",#
      "Slender.baardman", "Snakelet", "Spinynose.horsefish", "Steentjie", "Strepie", #
      "Super.klipfish", "Twotone.fingerfin", "White.seacatfish", "White.stumpnose", #
      "Yellowback.fusilier", "Yellowbelly.rock.cod", "Zebra")#
#
sp.of.interest<-c("Red.steenbras", "Galjoen", "Geelbek", "Red.roman", #
  "Red.stumpnose", "Janbruin", "Blacktail", "Shad", "Silver.kob", "Slender.baardman",#
  "West.coast.rock.lobster", "White.stumpnose", "Yellowbelly.rock.cod", "Zebra")#
#
MaxN<-BRUV.MaxN[,-c(1:5)] # Creates abundance only data frame (remove "meta-data" columns)#
#head(MaxN) #Check that I was successful by looking at first few rows#
#
BRUV.Richness<-apply(MaxN, 2, function(x) {as.numeric(x>0)}) # Create data frame that is presence/absence (0 and 1) only#
#Use below for co-occurrence by site rather than BRUV drop (either could be informative):#
Site.Richness<-aggregate(BRUV.Richness, by=list(env$Site), sum)[,-1] # total number of times each species found per site#
Site.Richness<-apply(Site.Richness, 2, function(x) {as.numeric(x>0)}) # Returns data frame to 0 and 1 only - ie yes if species EVER found there, no if NEVER found there#
#
#####
##Chondrichthyans considered as individual "species"#
#####
#common_names<-common_names[order(factor(common_names))]#
#colnames(Site.Richness)<-common_names#
co.out.Site<-cooccur(t(Site.Richness), spp_names=TRUE, type="spp_site", thresh=FALSE) # Do co-occur analysis based on site level#
#####
##Chondrichthyan co-occurrence relative to species of interest #
#####
#
Site.Richness.sp.interest<-Site.Richness[,which(colnames(Site.Richness)%in%c(all.chon,#
  sp.of.interest))]#
#
co.out.Site.sp.interest<-cooccur(t(Site.Richness.sp.interest), spp_names=TRUE, type="spp_site", thresh=FALSE) # Do co-occur analysis based on site level#
#
#####
##Shyshark co-occurrence relative to species of interest #
#####
#
Site.Richness.sp.interest_shyshark<-Site.Richness[,which(colnames(Site.Richness)%in%c(all.shyshark,#
  sp.of.interest))]#
#
co.out.Site.sp.interest_shyshark<-cooccur(t(Site.Richness.sp.interest_shyshark), spp_names=TRUE, type="spp_site", thresh=FALSE) # Do co-occur analysis based on site level#
#
#####
##Large shark co-occurrence relative to species of interest #
#####
#
Site.Richness.sp.interest_large<-Site.Richness[,which(colnames(Site.Richness)%in%c(all.large.shark,#
  sp.of.interest))]#
#
co.out.Site.sp.interest_large<-cooccur(t(Site.Richness.sp.interest_large), spp_names=TRUE, type="spp_site", thresh=FALSE) # Do co-occur analysis based on site level#
#
#####
##Batoid co-occurrence relative to species of interest #
#####
#
Site.Richness.sp.interest_batoid<-Site.Richness[,which(colnames(Site.Richness)%in%c(all.batoid,#
  sp.of.interest))]#
#
co.out.Site.sp.interest_batoid<-cooccur(t(Site.Richness.sp.interest_batoid), spp_names=TRUE, type="spp_site", thresh=FALSE) # Do co-occur analysis based on site level#
############################################
##########Question 1########################
############################################
#
###########################################  #
#Number of associations:####################
########################################### #
#
###########################
####per species groups:####
###########################
#for all chondrichthyans#
#
print.site<-co.out.Site$results#
#strongest interactions#
print.site$effects<-(print.site$obs_cooccur-print.site$exp_cooccur)/167#
#
print.site_pos<-subset(print.site, p_gt<0.05) #
print.site_pos<-print.site_pos[order(-print.site_pos$effects),]#
print.site_pos[which(print.site_pos$sp2_name=="Red.stumpnose"),] #positive interactions#
#
all.results_chon<-subset(print.site, sp1_name%in%all.chon | sp2_name%in%all.chon)#
#
sig_pos_chon<-subset(all.results_chon, p_gt<0.05) #
sig_neg_chon<-subset(all.results_chon, p_lt<0.05) #
nrow(sig_pos_chon) #number of significant positive associations#
nrow(sig_neg_chon) #number of significant negative associations#
#
(nrow(all.results_chon)-nrow(sig_pos_chon)-nrow(sig_neg_chon))#
#
52/nrow(all.results_chon)#
144/nrow(all.results_chon)#
#
hist(subset(print.site, sp1_name=="Dark.shyshark")$effects)#
range(all.results_chon$effects)#
#
#for all chondrichthyans relative to species of interest#
#
all.results_int1<-subset(print.site, sp1_name%in%all.chon & sp2_name%in%sp.of.interest)#
all.results_int2<-subset(print.site, sp1_name%in%sp.of.interest & sp2_name%in%all.chon)#
#
all.results_int<-rbind(all.results_int1, all.results_int2)#
#
sig_pos_int<-subset(all.results_int, p_gt<0.05) #
#
sig_neg_int<-subset(all.results_int, p_lt<0.05) #
#
nrow(sig_pos_int)/nrow(all.results_int) #percent of significant positive associations#
nrow(sig_neg_int)/nrow(all.results_int) #percent of significant negative associations#
#
(nrow(all.results_int)-nrow(sig_pos_int)-nrow(sig_neg_int))/nrow(all.results_int)#
#for species of interest#
#
all.results_interest<-subset(print.site, sp1_name%in%sp.of.interest | sp2_name%in%sp.of.interest)#
#
sig_pos_interest<-subset(all.results_interest, p_gt<0.05) #
sig_neg_interest<-subset(all.results_interest, p_lt<0.05) #
nrow(sig_pos_interest) #number of significant positive associations#
nrow(sig_neg_interest) #number of significant negative associations#
#
nrow(all.results_interest)-nrow(sig_pos_interest)-nrow(sig_neg_interest)#
#
#for teleosts#
#
all.results_tel<-subset(print.site, sp1_name%in%all.teleost | sp2_name%in%all.teleost)#
#
sig_pos_tel<-subset(all.results_tel, p_gt<0.05) #
sig_neg_tel<-subset(all.results_tel, p_lt<0.05) #
nrow(sig_pos_tel)/nrow(all.results_tel) #number of significant positive associations#
nrow(sig_neg_tel)/nrow(all.results_tel) #number of significant negative associations#
#
nrow(all.results_tel)-nrow(sig_pos_tel)-nrow(sig_neg_tel)#
#
#for cephalopods#
#
all.results_ceph<-subset(print.site, sp1_name%in%all.ceph | sp2_name%in%all.ceph)#
#
sig_pos_ceph<-subset(all.results_ceph, p_gt<0.05) #
sig_neg_ceph<-subset(all.results_ceph, p_lt<0.05) #
nrow(sig_pos_ceph) #number of significant positive associations#
nrow(sig_neg_ceph) #number of significant negative associations#
#
nrow(all.results_ceph)-nrow(sig_pos_ceph)-nrow(sig_neg_ceph)#
#
#for crustaceans#
#
all.results_crust<-subset(print.site, sp1_name%in%all.crust | sp2_name%in%all.crust)#
#
sig_pos_crust<-subset(all.results_crust, p_gt<0.05) #
sig_neg_crust<-subset(all.results_crust, p_lt<0.05) #
nrow(sig_pos_crust) #number of significant positive associations#
nrow(sig_neg_crust) #number of significant negative associations#
#
nrow(all.results_crust)-nrow(sig_pos_crust)-nrow(sig_neg_crust)#
#
#for shysharks#
#
all.results_shy<-subset(print.site, sp1_name%in%all.shyshark | sp2_name%in%all.shyshark)#
#
sig_pos_shy<-subset(all.results_shy, p_gt<0.05) #
sig_neg_shy<-subset(all.results_shy, p_lt<0.05) #
nrow(sig_pos_shy) #number of significant positive associations#
nrow(sig_neg_shy) #number of significant negative associations#
#
nrow(all.results_shy)-nrow(sig_pos_shy)-nrow(sig_neg_shy)#
#
#for large sharks#
#
all.results_large<-subset(print.site, sp1_name%in%all.large.shark | sp2_name%in%all.large.shark)#
#
sig_pos_large<-subset(all.results_large, p_gt<0.05) #
sig_neg_large<-subset(all.results_large, p_lt<0.05) #
nrow(sig_pos_large) #number of significant positive associations#
nrow(sig_neg_large) #number of significant negative associations#
#
nrow(all.results_large)-nrow(sig_pos_large)-nrow(sig_neg_large)#
#
#for batoids#
#
all.results_batoid<-subset(print.site, sp1_name%in%all.batoid| sp2_name%in%all.batoid)#
#
sig_pos_batoid<-subset(all.results_batoid, p_gt<0.05) #
sig_neg_batoid<-subset(all.results_batoid, p_lt<0.05) #
nrow(sig_pos_batoid) #number of significant positive associations#
nrow(sig_neg_batoid) #number of significant negative associations#
#
nrow(all.results_batoid)-nrow(sig_pos_batoid)-nrow(sig_neg_batoid)#
#####################################################################################
#####################individual species associations ################################
#####################################################################################
#
par.out_site<-pair.attributes(co.out.Site)# for all species#
#par.out_site[order(-par.out_site$pos),]#
#####################################################
####for chondrichthyans##############################
#####################################################
par.out.chon_site<-par.out_site[which(par.out_site$sppname%in%all.chon),] #Selecting all chondrichthyans #
#
rowSums(par.out.chon_site[,4:6])#
#
#####################################################
####for shysharks and batoids and large sharks#######
#####################################################
par.out_site.shy<-par.out_site[which(par.out_site$sppname%in%all.shyshark),] #Selecting just shysharks for example#
#
par.out_site.batoid<-par.out_site[which(par.out_site$sppname%in%all.batoid),] #Selecting all batoids#
#
par.out_site.large<-par.out_site[which(par.out_site$sppname%in%all.large.shark),] #Selecting all large sharks#
#
############################
#teleosts co-occurrence#
###############################
par.out.teleost_site<-par.out_site[which(par.out_site$sppname%in%all.teleost),] #Selecting all teleosts#
#
#species of interest#
#
par.out.interest_site<-par.out_site[which(par.out_site$sppname%in%sp.of.interest),] #Selecting all teleosts#
#
#par.out_site_group.tel[which(par.out_site_group.tel$sppname=="tel.site"),] #Selecting all teleosts#
#
############################
#crustacean co-occurrence#
###############################
par.out.crust_site<-par.out_site[which(par.out_site$sppname%in%all.crust),] #Selecting all teleosts#
#
###############################
#cephalopod co-occurrence#
###############################
par.out.ceph_site<-par.out_site[which(par.out_site$sppname%in%all.ceph),] #Selecting all teleosts#
#####################################
##effect sizes comparing averages:###
#####################################
#compare averages:#
mean(sig_pos_chon$effects)#
sd(sig_pos_chon$effects)#
mean(sig_pos_interest$effects)#
mean(sig_pos_tel$effects)#
#
mean(sig_neg_chon$effects)#
sd(sig_neg_chon$effects)#
range(sig_neg_chon$effects)#
mean(sig_neg_interest$effects)#
mean(sig_neg_tel$effects)#
#
##effect sizes for teleosts:#
#
Tel_effects_pos<-data.frame(species=c(as.character(sig_pos_tel$sp1_name), #
  as.character(sig_pos_tel$sp2_name)), #
  effects=c(sig_pos_tel$effects, sig_pos_tel$effects))#
Tel_effects_pos<-subset(Tel_effects_pos, species%in%all.teleost)#
#
Tel_effects_neg<-data.frame(species=c(as.character(sig_neg_tel$sp1_name), #
  as.character(sig_neg_tel$sp2_name)), #
  effects=c(sig_neg_tel$effects, sig_neg_tel$effects))#
Tel_effects_neg<-subset(Tel_effects_neg, species%in%all.teleost)#
#
pos_effect_tel<-aggregate(effects~species, Tel_effects_pos, mean)#
level_order_tel<-as.character(pos_effect_tel$species[order(-pos_effect_tel$effects)])#
neg_effect_tel<-aggregate(effects~species, Tel_effects_neg, mean)
#################################################
##########Preparing figures######################
#################################################
#
par.out.chon_site_ordered<-par.out.chon_site[order(-par.out.chon_site$pos),]#
#
chon.plot<-t(par.out.chon_site_ordered[,-7])#
colnames(chon.plot)<-as.character(par.out.chon_site_ordered[,7])#
#
chon.plot_percent<-chon.plot[1:3,-c(16:18)]#
#
chon.plot_percent<-cbind(chon.plot_percent, #
  data.frame(all.chond=c(13.2,4.8,82), all.chond.interest=c(12.2,2.6,85)))#
#
chon.plot_percent<-chon.plot_percent[c(2,3,1),]#
#
##Figure 4
shark_order_names<-c("Dark catshark", "Pyjama catshark", "Leopard catshark", "Puffadder catshark",#
  "Broadnose sevengill shark", "Short-tail stingray", "Soupfin shark", "Tiger catshark", #
  "Biscuit skate", "St. Joseph shark", "Smooth-hound shark", "Spotted-gully shark",  #
  "Spearnose skate", "Eagle ray", "Lesser guitarfish", "All chondrichthyans", "All chondrichthyans\n to species of interest")
##preparing figure 2b###
mean_chondr_pos<-mean(par.out.chon_site$pos)#
mean_chondr_neg<-mean(par.out.chon_site$neg)#
mean_chondr_random<-mean(par.out.chon_site$rand)#
#
mean_shy_pos<-mean(par.out_site.shy$pos)#
mean_shy_neg<-mean(par.out_site.shy$neg)#
mean_shy_random<-mean(par.out_site.shy$rand)#
#
mean_large_pos<-mean(par.out_site.large$pos)#
mean_large_neg<-mean(par.out_site.large$neg)#
mean_large_random<-mean(par.out_site.large$rand)#
#
mean_batoid_pos<-mean(par.out_site.batoid$pos)#
mean_batoid_neg<-mean(par.out_site.batoid$neg)#
mean_batoid_random<-mean(par.out_site.batoid$rand)#
#
mean_tel_pos<-mean(par.out.teleost_site$pos)#
mean_tel_neg<-mean(par.out.teleost_site$neg)#
mean_tel_random<-mean(par.out.teleost_site$rand)#
#
mean_crust_pos<-mean(par.out.crust_site$pos)#
mean_crust_neg<-mean(par.out.crust_site$neg)#
mean_crust_random<-mean(par.out.crust_site$rand)#
#
mean_ceph_pos<-mean(par.out.ceph_site$pos)#
mean_ceph_neg<-mean(par.out.ceph_site$neg)#
mean_ceph_random<-mean(par.out.ceph_site$rand)#
#
plot_averages<-data.frame(All.chon=c(mean_chondr_neg, mean_chondr_random, #
  mean_chondr_pos), all.shy=c(mean_shy_neg, mean_shy_random, mean_shy_pos),#
   all.large=c(mean_large_neg, mean_large_random, #
  mean_large_pos), all.batoid=c(mean_batoid_neg,mean_batoid_random, mean_batoid_pos), #
  all.teleost=c(mean_tel_neg,mean_tel_random, mean_tel_pos), #
  all.crust=c(mean_crust_neg,mean_crust_random,#
 mean_crust_pos), all.ceph=c(mean_ceph_neg, mean_ceph_random, mean_ceph_pos))#
#
average_order_names<-c("Chondrichthyans", "Catsharks", "Large sharks",#
  "Batoids", "Teleosts", "Crustaceans", "Cephalopods")#
#
#make the figure:#
postscript(file="~/Dropbox/Osgood_et_al_2019_UmbrellaSpecies/Figures_Tables/Figure4.eps", width = 6.9, height = 7.5)#
setEPS()#
#
par(mfrow=c(2,1), mar=c(7,5,1.4,5), oma=c(1,1,1,1), xpd=TRUE)#
#(a)#
barplot(as.matrix(chon.plot_percent), las=2, xaxt="n", ylab="Percent of pairings",#
  col = c("#FFCC66", "dark gray", "light blue"), cex.axis=1, cex.lab=1,tck = 0.05)#
text(c(seq(0.75, 18.75, 1.2),20.5), par("usr")[3]-3,#
     srt = 40, adj= 1, xpd = TRUE,#
     labels = shark_order_names, cex=1)#
mtext("(a)", 3, line=0.2, adj=0, cex=1.2)#
legend(20.4,100, c("Positive", "Random", "Negative"), fill=c("light blue","dark gray", "#FFCC66"), #
  bty="n", cex=0.8)#
#(b)#
barplot(as.matrix(plot_averages), las=2, xaxt="n", #
  ylab="Mean percent of pairings", ylim=c(0,100),#
  col = c("#FFCC66", "dark gray", "light blue"), cex.axis=1, cex.lab=1,tck = 0.05)#
text(seq(0.75, 9, 1.2), par("usr")[3]-1,#
     srt = 40, adj= 1, xpd = TRUE,#
     labels = average_order_names, cex=1)#
mtext("(b)", 3, line=0.2, adj=0, cex=1.2)#
box("inner", lwd=2)#
#
dev.off()
library(ggplot2)#
library(grid)#
library(cooccur)#
#
##analysis requried#
#Reading in data#
BRUV.MaxN<-read.csv("c:/Users/shark_000/Dropbox/BRUV_Paper/Data_Analysis/Data/BRUV_wide.csv", header=TRUE, stringsAsFactors=FALSE)#
env<-read.csv("c:/Users/shark_000/Dropbox/BRUV_Paper/Data_Analysis/Data/env_wide.csv", header=TRUE, stringsAsFactors=FALSE)#
#
BRUV.MaxN<-read.csv("~/Dropbox/BRUV_Paper/Data_Analysis/Data/BRUV_wide.csv", header=TRUE, stringsAsFactors=FALSE)#
env<-read.csv("~/Dropbox/BRUV_Paper/Data_Analysis/Data/env_wide.csv", header=TRUE, stringsAsFactors=FALSE)#
##Remove species (ie invertebrates) that are not relevant/ are rare#
#Remove krill from analysis#
BRUV.MaxN<-BRUV.MaxN[, -which(names(BRUV.MaxN)=="Euphausiids")]#
#
#Remove pelagic larva/bait fish rarely seen, sea pens, and worms#
BRUV.MaxN<-BRUV.MaxN[, -which(names(BRUV.MaxN)=="Unknown.fish")]#
BRUV.MaxN<-BRUV.MaxN[, -which(names(BRUV.MaxN)=="Larval.fish")]#
BRUV.MaxN<-BRUV.MaxN[, -which(names(BRUV.MaxN)=="Bait.fish...sardine")]#
#
#Remove jellyfish, sea urchins, sea anemones, sea cucumbers, sea pens, and worms#
#BRUV.MaxN<-BRUV.MaxN[, -which(names(BRUV.MaxN)=="Sea urchin")]#
BRUV.MaxN<-BRUV.MaxN[, -which(names(BRUV.MaxN)%in%c("Snail", #
  "Feathery.sea.pen", "Fanworm", #
    "Eunicid.worm", "Sea.anemone", "Starfish", "Seastar", #
    "Spiny.starfish", "Sea.cucumber", #
    "Cape.urchin", "Helmet.shell", "Sea.star", "Papery.burnupena", #
    "Sea.slug", "Tick.shell", "Red.sea.star","False.plume.anemone",#
    "Topshell.snail", "Topshell", "Turban.shell", "Fat.plough.shell", #
    "Root.mouthed.jellyfish", "Sea.urchin", "Jellyfish", "Purple.lipped.dog.whelk" ))]#
#Matrix without rare species (ie 3 instances or less)#
#MaxN_NoRare<-MaxN[,-which(colSums(BRUV.Richness)<=3)]#
#
#Setting the names of various ways of breaking up chondrichthyan class so can subset later - need periods as R deletes the spaces#
all.chon<-c("Dark.shyshark", "Puffadder.shyshark", "Broadnose.sevengill.shark", #
  "Leopard.catshark","Pyjama.shark", "Spearnose.skate", "Biscuit.skate", #
                  "Eagle.ray", "Spotted.gully.shark",#
                  "Bronze.whaler", "Smooth.hammerhead.shark", #
                  "Smooth.hound.shark",  "St..Joseph.shark", "Tiger.catshark", #
                    "Lesser.guitarfish", "Soupfin.shark", #
                    "Shortnose.spurdog","Short.tail.stingray")#
#
all.shyshark<-c("Dark.shyshark", "Puffadder.shyshark", "Leopard.catshark", #
  "Pyjama.shark", "Tiger.catshark")#
#
all.large.shark<-c("Broadnose.sevengill.shark", #
          "Spotted.gully.shark",#
               "Bronze.whaler", "Smooth.hammerhead.shark", #
               "Smooth.hound.shark",  #
                "Soupfin.shark")#
#
all.batoid<-c("Lesser.guitarfish", "Eagle.ray", "Biscuit.skate", #
  "Spearnose.skate", "Short.tail.stingray")#
#
all.crust<-c("Cape.rock.crab", "Hermit.crab", "Masked.crab", "Masked.crab.sp2", #
  "Sandflat.crab", "Three.spotted.swimming.crab", "West.coast.rock.lobster")#
#
all.ceph<-c("Common.octopus", "Chokka.squid")#
#
all.teleost<-c("Bank.steenbras", "Barehead.goby","Barred.fingerfin", "Beaked.sandfish",#
  "Black.seacatfish", "Blacktail", "Blue.hottentot", "Bluefin.gurnard", "Cape.horse.mackerel",#
      "Cape.sole", "Carpenter", "Evileye.blaasop", "Fransmadam", "Galjoen", "Geelbek", #
      "Giant.yellowtail", "Hottentot", "Janbruin", "Jutjaw", "Longsnout.pipefish", "Panga",#
      "Red.roman", "Red.steenbras", "Red.stumpnose", "Redfingers", "Shad", "Silver.kob",#
      "Slender.baardman", "Snakelet", "Spinynose.horsefish", "Steentjie", "Strepie", #
      "Super.klipfish", "Twotone.fingerfin", "White.seacatfish", "White.stumpnose", #
      "Yellowback.fusilier", "Yellowbelly.rock.cod", "Zebra")#
#
sp.of.interest<-c("Red.steenbras", "Galjoen", "Geelbek", "Red.roman", #
  "Red.stumpnose", "Janbruin", "Blacktail", "Shad", "Silver.kob", "Slender.baardman",#
  "West.coast.rock.lobster", "White.stumpnose", "Yellowbelly.rock.cod", "Zebra")#
#
MaxN<-BRUV.MaxN[,-c(1:5)] # Creates abundance only data frame (remove "meta-data" columns)#
#head(MaxN) #Check that I was successful by looking at first few rows#
#
BRUV.Richness<-apply(MaxN, 2, function(x) {as.numeric(x>0)}) # Create data frame that is presence/absence (0 and 1) only#
Site.Richness<-aggregate(BRUV.Richness, by=list(env$Site), sum)[,-1] # total number of times each species found per site#
Site.Richness<-apply(Site.Richness, 2, function(x) {as.numeric(x>0)}) # Returns data frame to 0 and 1 only - ie yes if species EVER found there, no if NEVER found there#
co.out.Site<-cooccur(t(Site.Richness), spp_names=TRUE, type="spp_site", thresh=FALSE) # Do co-occur analysis based on site level#
#
print.site<-co.out.Site$results#
#strongest interactions#
print.site$effects<-(print.site$obs_cooccur-print.site$exp_cooccur)/167#
#
all.results_chon<-subset(print.site, sp1_name%in%all.chon | sp2_name%in%all.chon)#
#
sig_pos_chon<-subset(all.results_chon, p_gt<0.05) #
sig_neg_chon<-subset(all.results_chon, p_lt<0.05) #
#
all.results_shy<-subset(print.site, sp1_name%in%all.shyshark | sp2_name%in%all.shyshark)#
#
sig_pos_shy<-subset(all.results_shy, p_gt<0.05) #
sig_neg_shy<-subset(all.results_shy, p_lt<0.05) #
#
all.results_large<-subset(print.site, sp1_name%in%all.large.shark | sp2_name%in%all.large.shark)#
#
sig_pos_large<-subset(all.results_large, p_gt<0.05) #
sig_neg_large<-subset(all.results_large, p_lt<0.05) #
#
all.results_batoid<-subset(print.site, sp1_name%in%all.batoid| sp2_name%in%all.batoid)#
#
sig_pos_batoid<-subset(all.results_batoid, p_gt<0.05) #
sig_neg_batoid<-subset(all.results_batoid, p_lt<0.05) #
all.results_interest<-subset(print.site, sp1_name%in%sp.of.interest | sp2_name%in%sp.of.interest)#
#
sig_pos_interest<-subset(all.results_interest, p_gt<0.05) #
sig_neg_interest<-subset(all.results_interest, p_lt<0.05) #
#
all.results_tel<-subset(print.site, sp1_name%in%all.teleost | sp2_name%in%all.teleost)#
#
sig_pos_tel<-subset(all.results_tel, p_gt<0.05) #
sig_neg_tel<-subset(all.results_tel, p_lt<0.05) #
all.results_ceph<-subset(print.site, sp1_name%in%all.ceph | sp2_name%in%all.ceph)#
#
sig_pos_ceph<-subset(all.results_ceph, p_gt<0.05) #
sig_neg_ceph<-subset(all.results_ceph, p_lt<0.05) #
all.results_crust<-subset(print.site, sp1_name%in%all.crust | sp2_name%in%all.crust)#
#
sig_pos_crust<-subset(all.results_crust, p_gt<0.05) #
sig_neg_crust<-subset(all.results_crust, p_lt<0.05)
ForPlot_effects_pos<-data.frame(species=c(as.character(sig_pos_chon$sp1_name), #
  as.character(sig_pos_chon$sp2_name)), #
  effects=c(sig_pos_chon$effects, sig_pos_chon$effects))#
ForPlot_effects_pos<-subset(ForPlot_effects_pos, species%in%all.chon)#
ForPlot_effects_pos<-subset(ForPlot_effects_pos, !species%in%c("Bronze.whaler", "Shortnose.spurdog", "Hammerhead.shark"))#
#
ForPlot_effects_neg<-data.frame(species=c(as.character(sig_neg_chon$sp1_name), #
  as.character(sig_neg_chon$sp2_name)), #
  effects=c(sig_neg_chon$effects, sig_neg_chon$effects))#
ForPlot_effects_neg<-subset(ForPlot_effects_neg, species%in%all.chon)#
ForPlot_effects_neg<-subset(ForPlot_effects_neg, !species%in%c("Bronze.whaler", "Shortnose.spurdog", "Hammerhead.shark"))#
#
pos_effect<-aggregate(effects~species, ForPlot_effects_pos, mean)#
level_order<-as.character(pos_effect$species[order(-pos_effect$effects)])#
neg_effect<-aggregate(effects~species, ForPlot_effects_neg, mean)#
#
#calculate sd for error bars:#
error_chon_pos<-aggregate(effects~species, ForPlot_effects_pos, sd)#
error_chon_neg<-aggregate(effects~species, ForPlot_effects_neg, sd)#
error_chon<-c(error_chon_pos$effects, error_chon_neg$effects)#
error_chon<-c(error_chon, rep(NA,4))#
#
ForBarPlot1<-data.frame(Species=c(as.character(pos_effect$species),#
as.character(neg_effect$species)), Effect=c(pos_effect$effects, neg_effect$effects))#
#
#add in NA's for species without any significant negative associations:#
ForBarPlot<-rbind(ForBarPlot1, data.frame(Species=c("Eagle.ray", "Lesser.guitarfish", #
  "Short.tail.stingray", "Soupfin.shark"), Effect=rep(NA,4)))#
#
ForBarPlot$error_plot<-error_chon#
#
#for boxplot:#
#ForBoxPlot<-data.frame(Species=c(as.character(ForPlot_effects_pos$species),#
#as.character(ForPlot_effects_neg$species)), Direction=c(rep("Positive", nrow(ForPlot_effects_pos)),#
#rep("Negative", nrow(ForPlot_effects_neg))),#
#Effect=c(ForPlot_effects_pos$effects, ForPlot_effects_neg$effects))#
#
#factor so plot x-labels occur in right order#
#ForBoxPlot$Species<-factor(ForBoxPlot$Species, levels=level_order)#
ForBarPlot$Species<-factor(ForBarPlot$Species, levels=level_order)#
################################
######For Part B:###############
################################
#
#add means for all chondrichthyans, all shysharks, large sharks, batoids#
pos_chon<-mean(sig_pos_chon$effects)#
neg_chon<-mean(sig_neg_chon$effects)#
sd_pos_chon<-sd(sig_pos_chon$effects)#
sd_neg_chon<-sd(sig_neg_chon$effects)#
#
pos_shy<-mean(sig_pos_shy$effects)#
neg_shy<-mean(sig_neg_shy$effects)#
sd_pos_shy<-sd(sig_pos_shy$effects)#
sd_neg_shy<-sd(sig_neg_shy$effects)#
#
pos_large<-mean(sig_pos_large$effects)#
neg_large<-mean(sig_neg_large$effects)#
sd_pos_large<-sd(sig_pos_large$effects)#
sd_neg_large<-sd(sig_neg_large$effects)#
#
pos_batoid<-mean(sig_pos_batoid$effects)#
neg_batoid<-mean(sig_neg_batoid$effects)#
sd_pos_batoid<-sd(sig_pos_batoid$effects)#
sd_neg_batoid<-sd(sig_neg_batoid$effects)#
#
#add means for all large sharks, all shysharks, large sharks, batoids for just links to speices of interest#
#
pos_chon_interest<-mean(subset(sig_pos_chon, sp1_name%in%sp.of.interest | sp2_name%in%sp.of.interest)$effects)#
neg_chon_interest<-mean(subset(sig_neg_chon, sp1_name%in%sp.of.interest | sp2_name%in%sp.of.interest)$effects)#
sd_pos_chon_interest<-sd(subset(sig_pos_chon, sp1_name%in%sp.of.interest | sp2_name%in%sp.of.interest)$effects)#
sd_neg_chon_interest<-sd(subset(sig_neg_chon, sp1_name%in%sp.of.interest | sp2_name%in%sp.of.interest)$effects)#
#
pos_shy_interest<-mean(subset(sig_pos_shy, sp1_name%in%sp.of.interest | sp2_name%in%sp.of.interest)$effects)#
neg_shy_interest<-mean(subset(sig_neg_shy, sp1_name%in%sp.of.interest | sp2_name%in%sp.of.interest)$effects)#
sd_pos_shy_interest<-sd(subset(sig_pos_shy, sp1_name%in%sp.of.interest | sp2_name%in%sp.of.interest)$effects)#
sd_neg_shy_interest<-sd(subset(sig_neg_shy, sp1_name%in%sp.of.interest | sp2_name%in%sp.of.interest)$effects)#
#
pos_large_interest<-mean(subset(sig_pos_large, sp1_name%in%sp.of.interest | sp2_name%in%sp.of.interest)$effects)#
neg_large_interest<-mean(subset(sig_neg_large, sp1_name%in%sp.of.interest | sp2_name%in%sp.of.interest)$effects)#
sd_pos_large_interest<-sd(subset(sig_pos_large, sp1_name%in%sp.of.interest | sp2_name%in%sp.of.interest)$effects)#
sd_neg_large_interest<-sd(subset(sig_neg_large, sp1_name%in%sp.of.interest | sp2_name%in%sp.of.interest)$effects)#
#
pos_batoid_interest<-mean(subset(sig_pos_batoid, sp1_name%in%sp.of.interest | sp2_name%in%sp.of.interest)$effects)#
neg_batoid_interest<-mean(subset(sig_neg_batoid, sp1_name%in%sp.of.interest | sp2_name%in%sp.of.interest)$effects)#
sd_pos_batoid_interest<-sd(subset(sig_pos_batoid, sp1_name%in%sp.of.interest | sp2_name%in%sp.of.interest)$effects)#
sd_neg_batoid_interest<-sd(subset(sig_neg_batoid, sp1_name%in%sp.of.interest | sp2_name%in%sp.of.interest)$effects)#
ForPartB<-data.frame(Group=rep(c("Chondrichthyans", "Catsharks", "Large sharks", "Batoids"),2), #
  Effect=c(pos_chon, pos_shy, pos_large, pos_batoid, neg_chon, neg_shy, neg_large, neg_batoid), #
  error_plot=c(sd_pos_chon, sd_pos_shy, sd_pos_large, sd_pos_batoid,#
    sd_neg_chon, sd_neg_shy, sd_neg_large, sd_neg_batoid), Direction=c(rep("Positive", 4), #
    rep("Negative", 4)))#
#
ForPartB$bar_max<-ForPartB$Effect+ForPartB$error_plot#
ForPartB$bar_min<-ForPartB$Effect-ForPartB$error_plot#
ForPartB_interest<-data.frame(Group=rep(c("Chondrichthyans", "Catsharks", "Large sharks", "Batoids"),2), #
  Effect=c(pos_chon_interest, pos_shy_interest, #
   pos_large_interest, pos_batoid_interest,#
    neg_chon_interest, neg_shy_interest, #
    neg_large_interest,  neg_batoid_interest), #
  error_plot=c(sd_pos_chon_interest, sd_pos_shy_interest, #
    sd_pos_large_interest, sd_pos_batoid_interest,#
    sd_neg_chon_interest,  sd_neg_shy_interest, #
    sd_neg_large_interest, sd_neg_batoid_interest), Direction=c(rep("Positive", 4), #
    rep("Negative", 4)))#
#
ForPartB_interest$bar_max<-ForPartB_interest$Effect+ForPartB_interest$error_plot#
ForPartB_interest$bar_min<-ForPartB_interest$Effect-ForPartB_interest$error_plot#
################################
######For Part C:###############
################################
##getting effect sizes for species of interest:#
#
ForPlot_effects_pos_interest<-data.frame(species=c(as.character(sig_pos_interest$sp1_name), #
  as.character(sig_pos_interest$sp2_name)), #
  effects=c(sig_pos_interest$effects, sig_pos_interest$effects))#
ForPlot_effects_pos_interest<-subset(ForPlot_effects_pos_interest, species%in%sp.of.interest)#
#
ForPlot_effects_neg_interest<-data.frame(species=c(as.character(sig_neg_interest$sp1_name), #
  as.character(sig_neg_interest$sp2_name)), #
  effects=c(sig_neg_interest$effects, sig_neg_interest$effects))#
ForPlot_effects_neg_interest<-subset(ForPlot_effects_neg_interest, species%in%sp.of.interest)#
#
pos_effect_interest<-aggregate(effects~species, ForPlot_effects_pos_interest, mean)#
pos_effect_interest<-rbind(pos_effect_interest, data.frame(species=c("Galjoen",#
  "Yellowbelly.rock.cod"), effects=rep(NA,2))) #fill in missing species#
#
level_order_interest<-c(as.character(pos_effect_interest$species[order(-pos_effect_interest$effects)]),#
  "Teleosts", "Crustaceans", "Cephalopods")#
#
neg_effect_interest<-aggregate(effects~species, ForPlot_effects_neg_interest, mean)#
neg_effect_interest<-rbind(neg_effect_interest, data.frame(species=c("Galjoen", "Geelbek",#
  "Janbruin", "Shad", "Silver.kob", "Slender.baardman", "Yellowbelly.rock.cod", "Zebra"), #
       effects=rep(NA,8))) #fill in missing species#
#
#add means for all teleosts, all crustaceans, all cephalopods to Figure 3b:#
pos_tel<-mean(sig_pos_tel$effects)#
neg_tel<-mean(sig_neg_tel$effects)#
sd_pos_tel<-sd(sig_pos_tel$effects)#
sd_neg_tel<-sd(sig_neg_tel$effects)#
pos_crust<-mean(sig_pos_crust$effects)#
neg_crust<-mean(sig_neg_crust$effects)#
sd_pos_crust<-sd(sig_pos_crust$effects)#
sd_neg_crust<-sd(sig_neg_crust$effects)#
#
pos_ceph<-mean(sig_pos_ceph$effects)#
neg_ceph<-mean(sig_neg_ceph$effects)#
sd_pos_ceph<-sd(sig_pos_ceph$effects)#
sd_neg_ceph<-sd(sig_neg_ceph$effects)#
#
#calculate sd for error bars:#
error_interest_pos<-aggregate(effects~species, ForPlot_effects_pos_interest, sd)#
error_interest_pos<-c(error_interest_pos$effects, rep(NA,2), sd_pos_tel, sd_pos_crust, sd_pos_ceph)#
error_interest_neg<-aggregate(effects~species, ForPlot_effects_neg_interest, sd)#
error_interest_neg<-c(error_interest_neg$effects, rep(NA,8), sd_neg_tel, sd_neg_crust, sd_neg_ceph)#
error_interest<-c(error_interest_pos, error_interest_neg)#
#
ForBarPlot_interest1<-data.frame(Species=c(as.character(pos_effect_interest$species),#
  "Teleosts", "Crustaceans", "Cephalopods",#
  as.character(neg_effect_interest$species), "Teleosts", "Crustaceans", "Cephalopods"), #
  Effect=c(pos_effect_interest$effects, pos_tel, pos_crust, pos_ceph,#
    neg_effect_interest$effects, neg_tel, neg_crust, neg_ceph), error_plot=error_interest)#
#
ForBarPlot_interest<-subset(ForBarPlot_interest1, !Species%in%c("Geelbek", "Shad", #
  "Galjoen", "Yellowbelly.rock.cod")) #remove species seen only once#
ForBarPlot_interest$Species<-factor(ForBarPlot_interest$Species, levels=level_order_interest)#
#
############################
########axis labels#########
############################
shark_order_names_fig3<-c("Dark catshark", "Leopard catshark", "Pyjama catshark", "Puffadder catshark",#
  "Broadnose sevengill shark", "Biscuit skate", "Short-tail stingray", #
 "Tiger catshark",  "Soupfin shark", "Smooth-hound shark","Spearnose skate",#
  "Spotted-gully shark", "St. Joseph shark", "Eagle ray", "Lesser guitarfish")#
#
tel_names<-c("West coast rock lobster", "Roman", "White stumpnose",#
  "Red stumpnose","Red steenbras", "Blacktail", "Janbruin", #
  "Slender baardman", "Silver kob", "Zebra", "Teleosts", "Crustaceans", "Cephalopods")#
#
part_b_order<-c("Chondrichthyans", "Catsharks", "Large sharks", "Batoids")#
##########
#Ensure labels will come out in right order:#
#
ForPartB$Group<-factor(ForPartB$Group, levels=part_b_order)#
ForPartB_interest$Group<-factor(ForPartB_interest$Group, levels=part_b_order)#
#
ForPartB$Direction<-factor(ForPartB$Direction, levels=c("Positive", "Negative"))#
ForPartB_interest$Direction<-factor(ForPartB_interest$Direction, levels=c("Positive", "Negative"))
#################################
#####code for plots:#############
#################################
g1<-ggplot(ForBarPlot, aes(x = Species, y = Effect)) +#
  geom_bar(#
    stat = "identity", position = position_stack(),#
    color = "white", fill = c(rep("grey30",15), rep("grey80",11))#
  ) + ylab("") + xlab("Species") +#
  theme(panel.background=element_rect(fill="white", colour="white")) +#
  theme(axis.line = element_line(colour = 'black', size = 1)) +#
  theme(axis.title.x = element_text(colour = 'black', angle = 0, size =  10, hjust = 0.5, vjust = 0.2)) +#
  theme(axis.title.y = element_text(colour = 'black', angle = 90, size = 10, hjust = 0.5, vjust = 1)) +#
  theme(axis.text=element_text(colour="black", size=10))  +#
  theme(axis.text.x = element_text(angle = 35, vjust=0.9, hjust=1)) +#
  theme(axis.text.y = element_text(margin=margin(t = 0, r = 20, b = 0, l = 0))) +#
  scale_x_discrete(labels=shark_order_names_fig3, expand = c(0.07, 0)) +#
  theme(axis.ticks.length=unit(-0.2, "cm")) +#
  geom_errorbar(aes(ymin=c(Effect-error_plot), ymax=c(Effect+error_plot)), width=.2) + #
   ggtitle("(a)") + #
  theme(plot.title = element_text(size = 10))+#
   theme(plot.margin=unit(c(0.2,0.2,0.6,0.3),"cm"))#
#
   barwidth<-0.35#
#
  g2<-ggplot() +#
  geom_bar(data=ForPartB, mapping=aes(x = as.numeric(Group), y = Effect, #
    fill = Direction), #
    stat = "identity", position = position_stack(), width=barwidth) + #
  geom_bar(data=ForPartB_interest, mapping=aes(x = as.numeric(Group)+barwidth+0.01, y = Effect, #
    fill = Direction), col="black", size=1,#
    stat = "identity", position = position_stack(), width=barwidth) +#
  scale_fill_manual(values = c("Positive" = "grey30", "Negative" = "grey80"))+#
  ylab("Co-occurrence strength") + xlab("Group") +#
  theme(panel.background=element_rect(fill="white", colour="white")) +#
  theme(axis.line = element_line(colour = 'black', size = 1)) +#
  theme(axis.title.x = element_text(colour = 'black', angle = 0, size = 10, hjust = 0.5, vjust = -9)) +#
  theme(axis.title.y = element_text(colour = 'black', angle = 90, size = 10, hjust = 0.5, vjust = 1)) +#
  theme(axis.text=element_text(colour="black", size=10))  +#
  theme(axis.text.x = element_text(angle = 0, vjust=-8)) +#
  theme(axis.text.y = element_text(margin=margin(t = 0, r = 20, b = 0, l = 0))) +#
  theme(legend.position = "none") +#
  theme(axis.ticks.length=unit(-0.2, "cm")) +#
  scale_x_continuous(labels=part_b_order, expand=c(0.07,0.05), breaks=c(1.2:4.2))+#
  geom_errorbar(aes(ymin=ForPartB$bar_min, #
    x=as.numeric(ForPartB$Group), ymax=ForPartB$bar_max), width=.2) + #
  geom_errorbar(aes(ymin=ForPartB_interest$bar_min, #
    x=c(as.numeric(ForPartB_interest$Group)+barwidth+0.01), #
    ymax=ForPartB_interest$bar_max), width=.2)+#
   ggtitle("(b)") + #
    theme(plot.title = element_text(size = 10))+#
   theme(plot.margin=unit(c(0.2,0.2,0.6,0.3),"cm"))#
#
g3<-ggplot(ForBarPlot_interest, aes(x = Species, y = Effect)) +#
  geom_bar(#
    stat = "identity", position = position_stack(),#
    color = "white", fill = c(rep("grey30", 13), rep("grey80",9))) + #
  ylab("") +#
  theme(panel.background=element_rect(fill="white", colour="white")) +#
  theme(axis.line = element_line(colour = 'black', size = 1)) +#
  theme(axis.title.x = element_text(colour = 'black', angle = 0, size = 10, hjust = 0.5, vjust = 0.2)) +#
  theme(axis.title.y = element_text(colour = 'black', angle = 90, size = 10, hjust = 0.5, vjust = 1)) +#
  theme(axis.text=element_text(colour="black", size=10))  +#
  theme(axis.text.x = element_text(angle = 35, vjust=0.7, hjust=0.9)) +#
  theme(axis.text.y = element_text(margin=margin(t = 0, r = 20, b = 0, l = 0))) +#
  scale_x_discrete(labels=tel_names, expand=c(0.07,0)) +#
  theme(axis.ticks.length=unit(-0.2, "cm")) +#
  geom_errorbar(aes(ymin=c(Effect-error_plot), ymax=c(Effect+error_plot)), width=.2) + #
   ggtitle("(c)") + #
    theme(plot.title = element_text(size = 10))+#
   theme(plot.margin=unit(c(0.2,0.2,0.6,0.3),"cm"))
#Figure 5:#
postscript(file="~/Dropbox/Osgood_et_al_2019_UmbrellaSpecies/Figures_Tables/Figure5.eps", width = 6.9, height = 8.5)#
setEPS()#
grid.arrange(g1, g2, g3, nrow = 3)#
grid.rect(width =  0.99, height = 0.99, gp = gpar(lwd = 2, col = "black", fill = NA))#
dev.off()
library(ggplot2)#
library(grid)#
library(cooccur)
postscript(file="~/Dropbox/Osgood_et_al_2019_UmbrellaSpecies/Figures_Tables/Figure5.eps", width = 6.9, height = 8.5)#
setEPS()#
grid.arrange(g1, g2, g3, nrow = 3)#
grid.rect(width =  0.99, height = 0.99, gp = gpar(lwd = 2, col = "black", fill = NA))#
dev.off()
library(gridExtra)
#Figure 5:#
postscript(file="~/Dropbox/Osgood_et_al_2019_UmbrellaSpecies/Figures_Tables/Figure5.eps", width = 6.9, height = 8.5)#
setEPS()#
grid.arrange(g1, g2, g3, nrow = 3)#
grid.rect(width =  0.99, height = 0.99, gp = gpar(lwd = 2, col = "black", fill = NA))#
dev.off()
#################################
#####code for plots:#############
#################################
g1<-ggplot(ForBarPlot, aes(x = Species, y = Effect)) +#
  geom_bar(#
    stat = "identity", position = position_stack(),#
    color = "white", fill = c(rep("grey30",15), rep("grey80",11))#
  ) + ylab("") + xlab("Species") +#
  theme(panel.background=element_rect(fill="white", colour="white")) +#
  theme(axis.line = element_line(colour = 'black', size = 1)) +#
  theme(axis.title.x = element_text(colour = 'black', angle = 0, size =  10, hjust = 0.5, vjust = 0.2)) +#
  theme(axis.title.y = element_text(colour = 'black', angle = 90, size = 10, hjust = 0.5, vjust = 1)) +#
  theme(axis.text=element_text(colour="black", size=10))  +#
  theme(axis.text.x = element_text(angle = 35, vjust=0.9, hjust=1)) +#
  theme(axis.text.y = element_text(margin=margin(t = 0, r = 20, b = 0, l = 0))) +#
  scale_x_discrete(labels=shark_order_names_fig3, expand = c(0.07, 0)) +#
  theme(axis.ticks.length=unit(-0.2, "cm")) +#
  geom_errorbar(aes(ymin=c(Effect-error_plot), ymax=c(Effect+error_plot)), width=.2) + #
   ggtitle("(a)") + #
  theme(plot.title = element_text(size = 13))+#
   theme(plot.margin=unit(c(0.2,0.2,0.8,0.3),"cm"))#
#
   barwidth<-0.35#
#
  g2<-ggplot() +#
  geom_bar(data=ForPartB, mapping=aes(x = as.numeric(Group), y = Effect, #
    fill = Direction), #
    stat = "identity", position = position_stack(), width=barwidth) + #
  geom_bar(data=ForPartB_interest, mapping=aes(x = as.numeric(Group)+barwidth+0.01, y = Effect, #
    fill = Direction), col="black", size=1,#
    stat = "identity", position = position_stack(), width=barwidth) +#
  scale_fill_manual(values = c("Positive" = "grey30", "Negative" = "grey80"))+#
  ylab("Co-occurrence strength") + xlab("Group") +#
  theme(panel.background=element_rect(fill="white", colour="white")) +#
  theme(axis.line = element_line(colour = 'black', size = 1)) +#
  theme(axis.title.x = element_text(colour = 'black', angle = 0, size = 10, hjust = 0.5, vjust = -9)) +#
  theme(axis.title.y = element_text(colour = 'black', angle = 90, size = 10, hjust = 0.5, vjust = 1)) +#
  theme(axis.text=element_text(colour="black", size=10))  +#
  theme(axis.text.x = element_text(angle = 0, vjust=-8)) +#
  theme(axis.text.y = element_text(margin=margin(t = 0, r = 20, b = 0, l = 0))) +#
  theme(legend.position = "none") +#
  theme(axis.ticks.length=unit(-0.2, "cm")) +#
  scale_x_continuous(labels=part_b_order, expand=c(0.07,0.05), breaks=c(1.2:4.2))+#
  geom_errorbar(aes(ymin=ForPartB$bar_min, #
    x=as.numeric(ForPartB$Group), ymax=ForPartB$bar_max), width=.2) + #
  geom_errorbar(aes(ymin=ForPartB_interest$bar_min, #
    x=c(as.numeric(ForPartB_interest$Group)+barwidth+0.01), #
    ymax=ForPartB_interest$bar_max), width=.2)+#
   ggtitle("(b)") + #
    theme(plot.title = element_text(size = 13))+#
   theme(plot.margin=unit(c(0.2,0.2,0.8,0.3),"cm"))#
#
g3<-ggplot(ForBarPlot_interest, aes(x = Species, y = Effect)) +#
  geom_bar(#
    stat = "identity", position = position_stack(),#
    color = "white", fill = c(rep("grey30", 13), rep("grey80",9))) + #
  ylab("") +#
  theme(panel.background=element_rect(fill="white", colour="white")) +#
  theme(axis.line = element_line(colour = 'black', size = 1)) +#
  theme(axis.title.x = element_text(colour = 'black', angle = 0, size = 10, hjust = 0.5, vjust = 0.2)) +#
  theme(axis.title.y = element_text(colour = 'black', angle = 90, size = 10, hjust = 0.5, vjust = 1)) +#
  theme(axis.text=element_text(colour="black", size=10))  +#
  theme(axis.text.x = element_text(angle = 35, vjust=0.7, hjust=0.9)) +#
  theme(axis.text.y = element_text(margin=margin(t = 0, r = 20, b = 0, l = 0))) +#
  scale_x_discrete(labels=tel_names, expand=c(0.07,0)) +#
  theme(axis.ticks.length=unit(-0.2, "cm")) +#
  geom_errorbar(aes(ymin=c(Effect-error_plot), ymax=c(Effect+error_plot)), width=.2) + #
   ggtitle("(c)") + #
    theme(plot.title = element_text(size = 13))+#
   theme(plot.margin=unit(c(0.2,0.2,0.8,0.3),"cm"))#
#Figure 5:#
postscript(file="~/Dropbox/Osgood_et_al_2019_UmbrellaSpecies/Figures_Tables/Figure5.eps", width = 6.9, height = 8.5)#
setEPS()#
grid.arrange(g1, g2, g3, nrow = 3)#
grid.rect(width =  0.99, height = 0.99, gp = gpar(lwd = 2, col = "black", fill = NA))#
dev.off()
ForPartB
ForPartB_interest
subset(sig_neg_large, sp1_name%in%sp.of.interest | sp2_name%in%sp.of.interest)
nrow(sig_pos_chon)
nrow(sig_neg_chon)
mean(sig_neg_chon$effects)
sd(sig_neg_chon$effects)
#Reading in data#
BRUV.MaxN<-read.csv("c:/Users/shark_000/Dropbox/BRUV_Paper/Data_Analysis/Data/BRUV_wide.csv", header=TRUE, stringsAsFactors=FALSE)#
env<-read.csv("c:/Users/shark_000/Dropbox/BRUV_Paper/Data_Analysis/Data/env_wide.csv", header=TRUE, stringsAsFactors=FALSE)#
#
BRUV.MaxN<-read.csv("~/Dropbox/BRUV_Paper/Data_Analysis/Data/BRUV_wide.csv", header=TRUE, stringsAsFactors=FALSE)#
env<-read.csv("~/Dropbox/BRUV_Paper/Data_Analysis/Data/env_wide.csv", header=TRUE, stringsAsFactors=FALSE)
env<-read.csv("~/Dropbox/BRUV_Paper/Data_Analysis/Data/Environmentals_SASC_BRUV.csv", header=TRUE, stringsAsFactors=FALSE)
table(env$Profile)
#Reading in data#
BRUV.MaxN<-read.csv("c:/Users/shark_000/Dropbox/BRUV_Paper/Data_Analysis/Data/BRUV_wide.csv", header=TRUE, stringsAsFactors=FALSE)#
env<-read.csv("c:/Users/shark_000/Dropbox/BRUV_Paper/Data_Analysis/Data/Environmentals_SASC_BRUV.csv", header=TRUE, stringsAsFactors=FALSE)#
#
BRUV.MaxN<-read.csv("~/Dropbox/BRUV_Paper/Data_Analysis/Data/BRUV_wide.csv", header=TRUE, stringsAsFactors=FALSE)#
env<-read.csv("~/Dropbox/BRUV_Paper/Data_Analysis/Data/Environmentals_SASC_BRUV.csv", header=TRUE, stringsAsFactors=FALSE)#
table(env$Profile)
env<-read.csv("~/Dropbox/BRUV_Paper/Data_Analysis/Data/Environmentals_SASC_BRUV.csv", header=TRUE, stringsAsFactors=FALSE)
table(env$Profile)
env<-read.csv("~/Dropbox/BRUV_Paper/Data_Analysis/Data/Environmentals_SASC_BRUV.csv", header=TRUE, stringsAsFactors=FALSE)
BRUV.MaxN<-read.csv("~/Dropbox/BRUV_Paper/Data_Analysis/Data/BRUV_wide.csv", header=TRUE, stringsAsFactors=FALSE)#
env<-read.csv("~/Dropbox/BRUV_Paper/Data_Analysis/Data/Environmentals_SASC_BRUV.csv", header=TRUE, stringsAsFactors=FALSE)#
table(env$Profile)
env<-read.csv("~/Dropbox/BRUV_Paper/Data_Analysis/Data/Environmentals_SASC_BRUV.csv", header=TRUE, stringsAsFactors=FALSE)
table(env$Profile)
env1<-read.csv("~/Dropbox/BRUV_Paper/Data_Analysis/Data/Environmentals_SASC_BRUV.csv", header=TRUE, stringsAsFactors=FALSE)
table(env1$Profile)
env<-read.csv("~/Dropbox/BRUV_Paper/Data_Analysis/Data/Environmentals_SASC_BRUV.csv", header=TRUE, stringsAsFactors=FALSE)#
table(env$Profile)
#setwd("c:/Users/shark_000/Documents/git_repos/Cocos_El_Nino/")#
setwd("~/Documents/git_repos/Cocos_El_Nino/")#
library(glmmTMB)#
library(lubridate)#
library(fastDummies)#
library(MASS)#
#
cocos<-read.csv("Data/Cocos_Final.csv", header=TRUE, stringsAsFactors = FALSE) #  read in the data updated to Aug 2019#
#
hammerhead<-subset(cocos, Hammerheads>=0)#
#
load("Models/Hammerhead_linear_sst_noint_id.Rdata")#
#
#Simulate 30 years of data with increasing frequency#
#
moderate<-subset(hammerhead, ONI>=1)#
strong<-subset(hammerhead, ONI>=1.5)#
#
moderatela<-subset(hammerhead, ONI<=(-1))#
strongla<-subset(hammerhead, ONI<=(-1.5))#
#El Nino event is three consecutive months#
table(moderate$Year)# number of years with moderate El Nino = 4 events moderate or stronger#
table(strong$Year)# number of years with strong El Nino = 2.5 events (almost one in 2009/2010)#
#
#La Nina event is three consecutive months#
table(moderatela$Year)# number of years with moderate El Nino = 5 events moderate or stronger#
table(strongla$Year)# number of years with strong El Nino = 4 events #
#####################################################
##############Hammerheads############################
#####################################################
#look at silkies#
#get coefficients from the model #
intercept<-summary(hammerhead.linear.sst.noint.id)$coef$cond[1,1]#
year<-summary(hammerhead.linear.sst.noint.id)$coef$cond[2,1]#
oni<-summary(hammerhead.linear.sst.noint.id)$coef$cond[4,1]#
current<-summary(hammerhead.linear.sst.noint.id)$coef$cond[c(1,5:9),1] #include intercept and remaining coefficients, intercept will multiply to zero due to dummy coding#
visibility<-summary(hammerhead.linear.sst.noint.id)$coef$cond[10,1]#
cosetime<-summary(hammerhead.linear.sst.noint.id)$coef$cond[12,1]#
#
set.seed(1)# set seed#
#
#set up values of explanatory variables#
#
dates_x<-seq(as.Date('1990/01/01'), as.Date('2019/12/31'), by="day")#
days_x<-1:length(dates_x)#
month<-as.numeric(format(dates_x, format="%m"))#
year_x<-as.numeric(format(dates_x, format="%Y"))-1989#
cosetime_x<-cos(2*pi*days_x/365.25)#
sinetime_x<-sin(2*pi*days_x/365.25)#
visibility_x1<-sample(0:64, length(dates_x), replace=TRUE)#
visibility_x<-(visibility_x1-mean(visibility_x1))/sd(visibility_x1)#
current_x1<-sample(0:5, length(dates_x), replace=TRUE)#
current_x<-dummy_cols(current_x1)[,c(".data_0", ".data_1", ".data_2", ".data_3", ".data_4", ".data_5")]#
current_x[,1]<-rep(0, nrow(current_x)) # ensure intercept level is all zeros#
#
month_lengthtemp<-days_in_month(dates_x)#
month_lengthtemp2<-data.frame(Month=names(month_lengthtemp), Length=month_lengthtemp, Year=year_x)#
month_length<-aggregate(Length~Month+Year,month_lengthtemp2, mean)#
#
#simulate as sine curve#
#freq El Ninos
cycle_freq<-3 #frequency of ENSO cycle in years#
n <- 30*12 # number of data points#
t <- 2*pi*c(1:n)/(cycle_freq*12)#
#
a <- 1#
b <- 1#
c.unif <- runif(n)#
c.norm <- rnorm(n)#
amp <- 1#
#
# generate data and calculate "y"#
#
y1 <- a*sin(b*t)+c.unif*amp # uniform error#
#
oni_x<-rep(y1, month_length$Length)#
#
hammerhead_mean<-exp(rep(intercept, length(days_x))+year*year_x+oni*oni_x+cosetime*cosetime_x+visibility*visibility_x+rowSums(current_x*current[col(current_x)]))#
hammerhead_data<-rnbinom(length(days_x), size=0.2, mu=hammerhead_mean)#
row_sample<-sample(c(1:length(hammerhead_data)), 3000, replace=FALSE)#
nb.out<-glm.nb(hammerhead_sample[row_sample]~year_x[row_sample]+oni_x[row_sample]+#
    cosetime_x[row_sample]+visibility_x[row_sample]+as.character(current_x1)[row_sample])
row_sample<-sample(c(1:length(hammerhead_data)), 3000, replace=FALSE)#
nb.out<-glm.nb(hammerhead_data[row_sample]~year_x[row_sample]+oni_x[row_sample]+#
    cosetime_x[row_sample]+visibility_x[row_sample]+as.character(current_x1)[row_sample])
summary(nb.out)
row_sample<-sample(c(1:length(hammerhead_data)), 2000, replace=FALSE)
nb.out<-glm.nb(hammerhead_data[row_sample]~year_x[row_sample]+oni_x[row_sample]+
cosetime_x[row_sample]+visibility_x[row_sample]+as.character(current_x1)[row_sample])
summary(nb.out)
row_sample<-sample(c(1:length(hammerhead_data)), 3000, replace=FALSE)#
nb.out<-glm.nb(hammerhead_data[row_sample]~year_x[row_sample]+#
    cosetime_x[row_sample]+visibility_x[row_sample]+as.character(current_x1)[row_sample])#
#
summary(nb.out)
row_sample<-sample(c(1:length(hammerhead_data)), 5000, replace=FALSE)#
nb.out<-glm.nb(hammerhead_data[row_sample]~year_x[row_sample]+#
    cosetime_x[row_sample]+visibility_x[row_sample]+as.character(current_x1)[row_sample])#
#
summary(nb.out)
row_sample<-sample(c(1:length(hammerhead_data)), 100, replace=FALSE)
nb.out<-glm.nb(hammerhead_data[row_sample]~year_x[row_sample]+
cosetime_x[row_sample]+visibility_x[row_sample]+as.character(current_x1)[row_sample])
summary(nb.out)
year
setwd("/Users/gjosgood/Documents/git_repos/Cocos_El_Nino/Scripts/Figures")
plot(ag$x~ag$Group.1)
ag<-aggregate(hammerhead_data[row_sample], by=list(year_x[row_sample]))#
#
plot(ag$x~ag$Group.1)
ag<-aggregate(hammerhead_data[row_sample], by=list(year_x[row_sample]), mean)
plot(ag$x~ag$Group.1)
plot(ag$x~ag$Group.1, type="l")
30*365
ag<-aggregate(hammerhead_data[row_sample], by=list(year_x[row_sample]), mean)
plot(ag$x~ag$Group.1, type="l")
row_sample<-sample(c(1:length(hammerhead_data)), 2000, replace=FALSE)#
nb.out<-glm.nb(hammerhead_data[row_sample]~year_x[row_sample]+#
    cosetime_x[row_sample]+visibility_x[row_sample]+as.character(current_x1)[row_sample])
ag<-aggregate(hammerhead_data[row_sample], by=list(year_x[row_sample]), mean)#
#
plot(ag$x~ag$Group.1, type="l")
row_sample<-c(1:(0.5*length(days_x)))
nb.out<-glm.nb(hammerhead_data[row_sample]~year_x[row_sample]+#
    cosetime_x[row_sample]+visibility_x[row_sample]+as.character(current_x1)[row_sample])#
#
summary(nb.out)
nb.out<-glm.nb(hammerhead_data[row_sample]~year_x[row_sample]+oni_x[row_sample]+#
    cosetime_x[row_sample]+visibility_x[row_sample]+as.character(current_x1)[row_sample])#
#
summary(nb.out)
summary(nb.out)[2,1]
effect_size<-summary(nb.out)$coefs[2,1]
summary(nb.out)$coefs[2,1]
summary(nb.out)$coefficients[2,1]
summary(nb.out)[2,4]
summary(nb.out)$coefficients[2,4]
effect_size<-NULL#
p_value<-NULL
effect_size<-matrix(, nrow = 1000, ncol = length(sample_length))#
p_value<-matrix(, nrow = 1000, ncol = length(sample_length))#
sample_length<-c(0.1,0.3,0.5,0.7,0.8,1)#
#
for (j in 1:length(sample_length)) {#
#
for (i in 1:1000) {#
#
cycle_freq<-3 #frequency of ENSO cycle in years#
n <- 30*12 # number of data points#
t <- 2*pi*c(1:n)/(cycle_freq*12)#
#
a <- 1#
b <- 1#
c.unif <- runif(n)#
c.norm <- rnorm(n)#
amp <- 1#
#
# generate data and calculate "y"#
#
y1 <- a*sin(b*t)+c.unif*amp # uniform error#
#
oni_x<-rep(y1, month_length$Length)#
#
hammerhead_mean<-exp(rep(intercept, length(days_x))+year*year_x+oni*oni_x+cosetime*cosetime_x+visibility*visibility_x+rowSums(current_x*current[col(current_x)]))#
hammerhead_data<-rnbinom(length(days_x), size=0.2, mu=hammerhead_mean)#
#
row_sample<-c(1:(j*length(days_x)))#
nb.out<-glm.nb(hammerhead_data[row_sample]~year_x[row_sample]+oni_x[row_sample]+#
    cosetime_x[row_sample]+visibility_x[row_sample]+as.character(current_x1)[row_sample])#
effect_size[i,j]<-summary(nb.out)$coefficients[2,1]#
p_value[i,j]<-summary(nb.out)$coefficients[2,4]#
}#
}
effect_size[i,j]
dim(effect_size)
effect_size<-matrix(, nrow = 1000, ncol = length(sample_length))
p_value<-matrix(, nrow = 1000, ncol = length(sample_length))
effect_size
sample_length<-c(0.1,0.3,0.5,0.7,0.8,1)#
#
for (j in 1:length(sample_length)) {#
#
for (i in 1:1000) {#
#
cycle_freq<-3 #frequency of ENSO cycle in years#
n <- 30*12 # number of data points#
t <- 2*pi*c(1:n)/(cycle_freq*12)#
#
a <- 1#
b <- 1#
c.unif <- runif(n)#
c.norm <- rnorm(n)#
amp <- 1#
#
# generate data and calculate "y"#
#
y1 <- a*sin(b*t)+c.unif*amp # uniform error#
#
oni_x<-rep(y1, month_length$Length)#
#
hammerhead_mean<-exp(rep(intercept, length(days_x))+year*year_x+oni*oni_x+cosetime*cosetime_x+visibility*visibility_x+rowSums(current_x*current[col(current_x)]))#
hammerhead_data<-rnbinom(length(days_x), size=0.2, mu=hammerhead_mean)#
#
row_sample<-c(1:(j*length(days_x)))#
nb.out<-glm.nb(hammerhead_data[row_sample]~year_x[row_sample]+oni_x[row_sample]+#
    cosetime_x[row_sample]+visibility_x[row_sample]+as.character(current_x1)[row_sample])#
effect_size[i,j]<-summary(nb.out)$coefficients[2,1]#
p_value[i,j]<-summary(nb.out)$coefficients[2,4]#
}#
}
hist(effect_size[,5])
hist(effect_size[,1])
mean(effect_size[,1])
mean(effect_size[,2])
mean(effect_size[,3])
mean(effect_size[,4])
mean(effect_size[,5])
mean(effect_size[,6])
hist(p_value[,1])
mean(p_value[,1])
mean(p_value[,6])
mean(p_value[,3])
range(oni_x)
hist(oni_x)
plot(t, y1, t="l", ylim=range(y1,y2)*c(1,1.2))#
for (i in seq(1, 360, 12)) {#
#
abline(v=t[i]) }
plot(t, y1, t="l")
for (i in seq(1, 360, 12)) {#
#
abline(v=t[i]) }
cycle_freq<-3 #frequency of ENSO cycle in years#
n <- 30*12 # number of data points#
t <- 2*pi*c(1:n)/(cycle_freq*12)#
#
a <- 1.5#
b <- 1#
c.unif <- runif(n)#
c.norm <- rnorm(n)#
amp <- a
y1 <- a*sin(b*t)+c.unif*amp # uniform error
oni_x<-rep(y1, month_length$Length)
hammerhead_mean<-exp(rep(intercept, length(days_x))+year*year_x+oni*oni_x+cosetime*cosetime_x+visibility*visibility_x+rowSums(current_x*current[col(current_x)]))
hammerhead_data<-rnbinom(length(days_x), size=0.2, mu=hammerhead_mean)
row_sample<-c(1:(j*length(days_x)))
nb.out<-glm.nb(hammerhead_data[row_sample]~year_x[row_sample]+oni_x[row_sample]+
cosetime_x[row_sample]+visibility_x[row_sample]+as.character(current_x1)[row_sample])
summary(nb.out)$coefficients
plot(t, y1, t="l")
for (i in seq(1, 360, 12)) {#
#
abline(v=t[i]) }
abline(v=t[i]) }
# plot results#
plot(t, y1, t="l")#
for (i in seq(1, 360, 12)) {#
#
abline(v=t[i]) }
cycle_freq<-5 #frequency of ENSO cycle in years#
n <- 30*12 # number of data points#
t <- 2*pi*c(1:n)/(cycle_freq*12)#
#
a <- 1.5#
b <- 1#
c.unif <- runif(n)#
c.norm <- rnorm(n)#
amp <- a#
#
# generate data and calculate "y"#
#
y1 <- a*sin(b*t)+c.unif*amp # uniform error#
#
oni_x<-rep(y1, month_length$Length)#
#
hammerhead_mean<-exp(rep(intercept, length(days_x))+year*year_x+oni*oni_x+cosetime*cosetime_x+visibility*visibility_x+rowSums(current_x*current[col(current_x)]))#
hammerhead_data<-rnbinom(length(days_x), size=0.2, mu=hammerhead_mean)#
#
row_sample<-c(1:(j*length(days_x)))#
nb.out<-glm.nb(hammerhead_data[row_sample]~year_x[row_sample]+oni_x[row_sample]+#
    cosetime_x[row_sample]+visibility_x[row_sample]+as.character(current_x1)[row_sample])
summary(nb.out)$coefficients
0.5*(length(t))
0.5*(length(t))
cycle_freq<-5 #frequency of ENSO cycle in years#
n <- 30*12 # number of data points#
t <- 2*pi*c(1:n)/(cycle_freq*12)#
#
a1 <- 1.5#
a2<-0.7#
b <- 1#
c.unif <- runif(n/2)#
amp1 <- a1#
amp2 <- a2#
#
# generate data and calculate "y"#
#
y1 <- a1*sin(b*t[1:180])+c.unif*amp1 # uniform error#
y2 <- a2*sin(b*t[181:360])+c.unif*amp2 # uniform error#
#
oni_x<-rep(c(y1,y2), month_length$Length)
length(oni_x)
length(days_x)
plot(t, c(y1,y2), t="l")#
for (i in seq(1, 360, 12)) {#
#
abline(v=t[i]) }
a1 <- 1.5#
a2<-0.5#
b <- 1#
c.unif <- runif(n/2)#
amp1 <- a1#
amp2 <- a2#
#
# generate data and calculate "y"#
#
y1 <- a1*sin(b*t[1:180])+c.unif*amp1 # uniform error#
y2 <- a2*sin(b*t[181:360])+c.unif*amp2 # uniform error#
#
oni_x<-rep(c(y1,y2), month_length$Length)
plot(ag$x~ag$Group.1, type="l")#
#
# plot results#
plot(t, c(y1,y2), t="l")#
for (i in seq(1, 360, 12)) {#
#
abline(v=t[i]) }
a1 <- 0.5#
a2<-1.5#
b <- 1#
c.unif <- runif(n/2)#
amp1 <- a1#
amp2 <- a2#
#
# generate data and calculate "y"#
#
y1 <- a1*sin(b*t[1:180])+c.unif*amp1 # uniform error#
y2 <- a2*sin(b*t[181:360])+c.unif*amp2 # uniform error#
#
oni_x<-rep(c(y1,y2), month_length$Length)#
#
hammerhead_mean<-exp(rep(intercept, length(days_x))+year*year_x+oni*oni_x+cosetime*cosetime_x+visibility*visibility_x+rowSums(current_x*current[col(current_x)]))#
hammerhead_data<-rnbinom(length(days_x), size=0.2, mu=hammerhead_mean)
effect_size<-matrix(, nrow = 1000, ncol = length(sample_length))#
p_value<-matrix(, nrow = 1000, ncol = length(sample_length))#
sample_length<-c(0.1,0.3,0.5,0.7,0.8,1)#
#
for (j in 1:length(sample_length)) {#
#
for (i in 1:1000) {#
#
cycle_freq<-5 #frequency of ENSO cycle in years#
n <- 30*12 # number of data points#
t <- 2*pi*c(1:n)/(cycle_freq*12)#
#
a1 <- 0.5#
a2<-1.5#
b <- 1#
c.unif <- runif(n/2)#
amp1 <- a1#
amp2 <- a2#
#
# generate data and calculate "y"#
#
y1 <- a1*sin(b*t[1:180])+c.unif*amp1 # uniform error#
y2 <- a2*sin(b*t[181:360])+c.unif*amp2 # uniform error#
#
oni_x<-rep(c(y1,y2), month_length$Length)#
#
hammerhead_mean<-exp(rep(intercept, length(days_x))+year*year_x+oni*oni_x+cosetime*cosetime_x+visibility*visibility_x+rowSums(current_x*current[col(current_x)]))#
hammerhead_data<-rnbinom(length(days_x), size=0.2, mu=hammerhead_mean)#
#
row_sample<-c(1:(j*length(days_x)))#
nb.out<-glm.nb(hammerhead_data[row_sample]~year_x[row_sample]+oni_x[row_sample]+#
    cosetime_x[row_sample]+visibility_x[row_sample]+as.character(current_x1)[row_sample])#
effect_size[i,j]<-summary(nb.out)$coefficients[2,1]#
p_value[i,j]<-summary(nb.out)$coefficients[2,4]#
}#
}
mean(effect_size[,1])
mean(effect_size[,2])
mean(effect_size[,6])
mean(p_value[,6])
mean(p_value[,1])
ag<-aggregate(hammerhead_data[row_sample], by=list(year_x[row_sample]), mean)
plot(ag$x~ag$Group.1, type="l")
summary(nb.out)
y<-c(y1,y2)
hist(y)
y[y<0]<-y_la[y_la<0]
y1 <- a1*sin(b*t[1:180])+c.unif*amp1 # uniform error#
y2 <- a2*sin(b*t[181:360])+c.unif*amp2 # uniform error#
y_la <- a_la*sin(b*t)+c.unif*amp_la # uniform error#
y<-c(y1,y2)#
y[y<0]<-y_la[y_la<0]
y_la <- a_la*sin(b*t)+c.unif*amp_la # uniform error
a1 <- 0.5#
a2<-1.5#
a_la<-0.5#
b <- 1#
c.unif <- runif(n/2)#
amp1 <- a1#
amp2 <- a2#
amp_la<- a_la
y1 <- a1*sin(b*t[1:180])+c.unif*amp1 # uniform error#
y2 <- a2*sin(b*t[181:360])+c.unif*amp2 # uniform error#
y_la <- a_la*sin(b*t)+c.unif*amp_la # uniform error#
y<-c(y1,y2)#
y[y<0]<-y_la[y_la<0]
plot(t, y, t="l")#
for (i in seq(1, 360, 12)) {#
#
abline(v=t[i]) }
year<-(-0.001)
dates_x<-seq(as.Date('1990/01/01'), as.Date('2019/12/31'), by="day")#
days_x<-1:length(dates_x)#
month<-as.numeric(format(dates_x, format="%m"))#
year_x<-as.numeric(format(dates_x, format="%Y"))-1989#
cosetime_x<-cos(2*pi*days_x/365.25)#
sinetime_x<-sin(2*pi*days_x/365.25)#
visibility_x1<-sample(0:64, length(dates_x), replace=TRUE)#
visibility_x<-(visibility_x1-mean(visibility_x1))/sd(visibility_x1)#
current_x1<-sample(0:5, length(dates_x), replace=TRUE)#
current_x<-dummy_cols(current_x1)[,c(".data_0", ".data_1", ".data_2", ".data_3", ".data_4", ".data_5")]#
current_x[,1]<-rep(0, nrow(current_x)) # ensure intercept level is all zeros#
#
month_lengthtemp<-days_in_month(dates_x)#
month_lengthtemp2<-data.frame(Month=names(month_lengthtemp), Length=month_lengthtemp, Year=year_x)#
month_length<-aggregate(Length~Month+Year,month_lengthtemp2, mean)
effect_size<-matrix(, nrow = 1000, ncol = length(sample_length))#
p_value<-matrix(, nrow = 1000, ncol = length(sample_length))#
sample_length<-c(0.1,0.3,0.5,0.7,0.8,1)#
#
for (j in 1:length(sample_length)) {#
#
for (i in 1:1000) {#
#
cycle_freq<-5 #frequency of ENSO cycle in years#
n <- 30*12 # number of data points#
t <- 2*pi*c(1:n)/(cycle_freq*12)#
#
a1 <- 0.5#
a2<-1.5#
a_la<-0.5#
b <- 1#
c.unif <- runif(n/2)#
amp1 <- a1#
amp2 <- a2#
amp_la<- a_la#
#
# generate data and calculate "y"#
#
y1 <- a1*sin(b*t[1:180])+c.unif*amp1 # uniform error#
y2 <- a2*sin(b*t[181:360])+c.unif*amp2 # uniform error#
y_la <- a_la*sin(b*t)+c.unif*amp_la # uniform error#
y<-c(y1,y2)#
y[y<0]<-y_la[y_la<0]#
#
oni_x<-rep(y, month_length$Length)#
#
hammerhead_mean<-exp(rep(intercept, length(days_x))+year*year_x+oni*oni_x+cosetime*cosetime_x+visibility*visibility_x+rowSums(current_x*current[col(current_x)]))#
hammerhead_data<-rnbinom(length(days_x), size=0.2, mu=hammerhead_mean)#
#
row_sample<-c(1:(j*length(days_x)))#
nb.out<-glm.nb(hammerhead_data[row_sample]~year_x[row_sample]+oni_x[row_sample]+#
    cosetime_x[row_sample]+visibility_x[row_sample]+as.character(current_x1)[row_sample])#
effect_size[i,j]<-summary(nb.out)$coefficients[2,1]#
p_value[i,j]<-summary(nb.out)$coefficients[2,4]#
}#
}
mean(p_value[,1])
mean(p_value[,6])
mean(effect_size[,1])
mean(effect_size[,6])
mean(effect_size[,3])
row_sample<-seq(1,(j*length(days_x)),3)
nb.out<-glm.nb(hammerhead_data[row_sample]~year_x[row_sample]+oni_x[row_sample]+
cosetime_x[row_sample]+visibility_x[row_sample]+as.character(current_x1)[row_sample])
summary(nb.out)
hist(effect_size[,3])
#For loop to model the ONI and hammerhead abundance, run NB model#
#get pvalues and coefficients of year effect#
#
effect_size<-matrix(, nrow = 1000, ncol = length(sample_length))#
p_value<-matrix(, nrow = 1000, ncol = length(sample_length))#
sample_length<-c(0.1,0.3,0.5,0.7,0.8,1)#
#
for (j in 1:length(sample_length)) {#
#
for (i in 1:1000) {#
#
cycle_freq<-5 #frequency of ENSO cycle in years#
n <- 30*12 # number of data points#
t <- 2*pi*c(1:n)/(cycle_freq*12)#
#
a1 <- 0.5#
a2<-1.5#
a_la<-0.5#
b <- 1#
c.unif <- runif(n/2)#
amp1 <- a1#
amp2 <- a2#
amp_la<- a_la#
#
# generate data and calculate "y"#
#
y1 <- a1*sin(b*t[1:180])+c.unif*amp1 # uniform error#
y2 <- a2*sin(b*t[181:360])+c.unif*amp2 # uniform error#
y_la <- a_la*sin(b*t)+c.unif*amp_la # uniform error#
y<-c(y1,y2)#
y[y<0]<-y_la[y_la<0]#
#
oni_x<-rep(y, month_length$Length)#
#
hammerhead_mean<-exp(rep(intercept, length(days_x))+year*year_x+oni*oni_x+cosetime*cosetime_x+visibility*visibility_x+rowSums(current_x*current[col(current_x)]))#
hammerhead_data<-rnbinom(length(days_x), size=0.2, mu=hammerhead_mean)#
#
row_sample<-seq(1,(j*length(days_x)),3)#
nb.out<-glm.nb(hammerhead_data[row_sample]~year_x[row_sample]+oni_x[row_sample]+#
    cosetime_x[row_sample]+visibility_x[row_sample]+as.character(current_x1)[row_sample])#
effect_size[i,j]<-summary(nb.out)$coefficients[2,1]#
p_value[i,j]<-summary(nb.out)$coefficients[2,4]#
}#
}
mean(effect_size[,3])
mean(effect_size[,1])
mean(effect_size[,6])
length(hammerhead_mean)
length(hammerhead_data[row_sample])
row_sample
length(days_x)
j
seq(1,(sample_length[j]*length(days_x)),3)
#For loop to model the ONI and hammerhead abundance, run NB model#
#get pvalues and coefficients of year effect#
#
effect_size<-matrix(, nrow = 1000, ncol = length(sample_length))#
p_value<-matrix(, nrow = 1000, ncol = length(sample_length))#
sample_length<-c(0.1,0.3,0.5,0.7,0.8,1)#
#
for (j in 1:length(sample_length)) {#
#
for (i in 1:1000) {#
#
cycle_freq<-5 #frequency of ENSO cycle in years#
n <- 30*12 # number of data points#
t <- 2*pi*c(1:n)/(cycle_freq*12)#
#
a1 <- 0.5#
a2<-1.5#
a_la<-0.5#
b <- 1#
c.unif <- runif(n/2)#
amp1 <- a1#
amp2 <- a2#
amp_la<- a_la#
#
# generate data and calculate "y"#
#
y1 <- a1*sin(b*t[1:180])+c.unif*amp1 # uniform error#
y2 <- a2*sin(b*t[181:360])+c.unif*amp2 # uniform error#
y_la <- a_la*sin(b*t)+c.unif*amp_la # uniform error#
y<-c(y1,y2)#
y[y<0]<-y_la[y_la<0]#
#
oni_x<-rep(y, month_length$Length)#
#
hammerhead_mean<-exp(rep(intercept, length(days_x))+year*year_x+oni*oni_x+cosetime*cosetime_x+visibility*visibility_x+rowSums(current_x*current[col(current_x)]))#
hammerhead_data<-rnbinom(length(days_x), size=0.2, mu=hammerhead_mean)#
length(hammerhead_data[row_sample])#
row_sample<-seq(1,(sample_length[j]*length(days_x)),3)#
nb.out<-glm.nb(hammerhead_data[row_sample]~year_x[row_sample]+oni_x[row_sample]+#
    cosetime_x[row_sample]+visibility_x[row_sample]+as.character(current_x1)[row_sample])#
effect_size[i,j]<-summary(nb.out)$coefficients[2,1]#
p_value[i,j]<-summary(nb.out)$coefficients[2,4]#
}#
}
warnings()
summary(nb.out)
mean(effect_size[,6])
mean(effect_size[,2])
mean(effect_size[,1])
mean(effect_size[,4])
effect_size<-matrix(, nrow = 1000, ncol = length(sample_length))#
p_value<-matrix(, nrow = 1000, ncol = length(sample_length))#
sample_length<-c(0.1,0.3,0.5,0.7,0.8,1)#
#
for (j in 1:length(sample_length)) {#
#
for (i in 1:1000) {#
#
cycle_freq<-5 #frequency of ENSO cycle in years#
n <- 30*12 # number of data points#
t <- 2*pi*c(1:n)/(cycle_freq*12)#
#
a1 <- 0.5#
a2<-1.5#
a_la<-0.5#
b <- 1#
c.unif <- runif(n/2)#
amp1 <- a1#
amp2 <- a2#
amp_la<- a_la#
#
# generate data and calculate "y"#
#
y1 <- a1*sin(b*t[1:180])+c.unif*amp1 # uniform error#
y2 <- a2*sin(b*t[181:360])+c.unif*amp2 # uniform error#
y_la <- a_la*sin(b*t)+c.unif*amp_la # uniform error#
y<-c(y1,y2)#
y[y<0]<-y_la[y_la<0]#
#
oni_x<-rep(y, month_length$Length)#
#
hammerhead_mean<-exp(rep(intercept, length(days_x))+year*year_x+oni*oni_x+cosetime*cosetime_x+visibility*visibility_x+rowSums(current_x*current[col(current_x)]))#
hammerhead_data<-rnbinom(length(days_x), size=0.2, mu=hammerhead_mean)#
length(hammerhead_data[row_sample])#
row_sample<-seq(1,(sample_length[j]*length(days_x)),1)#
nb.out<-glm.nb(hammerhead_data[row_sample]~year_x[row_sample]+oni_x[row_sample]+#
    cosetime_x[row_sample]+visibility_x[row_sample]+as.character(current_x1)[row_sample])#
effect_size[i,j]<-summary(nb.out)$coefficients[2,1]#
p_value[i,j]<-summary(nb.out)$coefficients[2,4]#
}#
}
mean(effect_size[,1])
mean(effect_size[,6])
mean(effect_size[,5])
mean(effect_size[,4])
mean(effect_size[,3])
mean(effect_size[,2])
mean(effect_size[,1])
# plot results#
plot(t, y, t="l")#
for (i in seq(1, 360, 12)) {#
#
abline(v=t[i]) }
